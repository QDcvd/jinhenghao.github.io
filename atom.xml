<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JinhengHao的博客</title>
  
  <subtitle>生信/实验/技术交流</subtitle>
  <link href="https://www.jinhenghaoblog.top/atom.xml" rel="self"/>
  
  <link href="https://www.jinhenghaoblog.top/"/>
  <updated>2025-10-13T03:54:40.782Z</updated>
  <id>https://www.jinhenghaoblog.top/</id>
  
  <author>
    <name>Jinheng Hao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL DML语句详解：掌握增删改三大核心操作</title>
    <link href="https://www.jinhenghaoblog.top/posts/20251013110124.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20251013110124.html</id>
    <published>2025-10-13T03:01:24.000Z</published>
    <updated>2025-10-13T03:54:40.782Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DML介绍"><a href="#DML介绍" class="headerlink" title="DML介绍"></a>DML介绍</h2><p>DML英文全称是Data Manipulation Language（数据操作语言），用来对数据库中表的数据记录进行增删改操作。</p><ul><li>添加数据（INSERT）</li><li>修改数据（UPDATE）</li><li>删除数据（DELETE）</li></ul><h2 id="DML——添加数据"><a href="#DML——添加数据" class="headerlink" title="DML——添加数据"></a>DML——添加数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 给指定字段添加数据</span><br><span class="line"><span class="keyword">INSERT INTO</span> 表名（字段名<span class="number">1</span>、字段名<span class="number">2</span>、....） <span class="keyword">VALUES</span>（值<span class="number">1</span>、值<span class="number">2</span>、....）;</span><br><span class="line"># 给全部字段添加数据</span><br><span class="line"><span class="keyword">INSERT INTO</span> 表名 <span class="keyword">VALUES</span>（值<span class="number">1</span>、值<span class="number">2</span>、...）;</span><br><span class="line"># 批量添加数据</span><br><span class="line"><span class="keyword">INSERT INTO</span> 表名（字段名<span class="number">1</span>、字段名<span class="number">2</span>、....）<span class="keyword">VALUES</span>（值<span class="number">1</span>、值<span class="number">2</span>、....）, （值<span class="number">1</span>、值<span class="number">2</span>、....）, （值<span class="number">1</span>、值<span class="number">2</span>、....）;</span><br><span class="line"><span class="keyword">INSERT INTO</span> 表名 <span class="keyword">VALUES</span>（值<span class="number">1</span>、值<span class="number">2</span>、...）, （值<span class="number">1</span>、值<span class="number">2</span>、....）, （值<span class="number">1</span>、值<span class="number">2</span>、....）, （值<span class="number">1</span>、值<span class="number">2</span>、....）;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>插入数据时，指定的字段顺序需要与值的顺序是一一对应的</li><li>字符串和日期型数据应该包含在引号中</li><li>插入数据的大小，应该在字段的规定范围内</li></ul><p><strong>示例</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 给指定字段添加数据</span><br><span class="line"><span class="keyword">insert into</span> employee(id, workno, name, gender, age, idcard, entrydate) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">&#x27;1&#x27;</span>, Itcast<span class="string">&#x27;, &quot;男&#x27;</span>，<span class="number">10</span>，<span class="number">123456789012345678</span><span class="string">&#x27;，&#x27;</span><span class="number">2000</span><span class="number">-01</span><span class="number">-01</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 给全部字段添加数据</span></span><br><span class="line"><span class="string">insert into employee values (1, &#x27;</span><span class="number">1</span><span class="string">&#x27;, Itcast&#x27;</span>, &quot;男&#x27;，10，123456789012345678&#x27;，&#x27;2000-01-01&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 批量添加数据</span><br><span class="line">insert into employee values (1, &#x27;1&#x27;, Itcast&#x27;, &quot;男<span class="string">&#x27;，10，123456789012345678&#x27;</span>，<span class="string">&#x27;2000-01-01&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;2&#x27;</span>, It12st<span class="string">&#x27;, &quot;女&#x27;</span>，<span class="number">10</span>，<span class="number">12345125678</span><span class="string">&#x27;，&#x27;</span><span class="number">2011</span><span class="number">-05</span><span class="number">-16</span><span class="string">&#x27;);</span></span><br></pre></td></tr></table></figure><h2 id="DML——修改数据"><a href="#DML——修改数据" class="headerlink" title="DML——修改数据"></a>DML——修改数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 更新数据</span><br><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>, 字段名<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span>, ... [<span class="keyword">WHERE</span> 条件];</span><br></pre></td></tr></table></figure><p>注：修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的数据</p><p><strong>示例</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 修改id为<span class="number">1</span>的数据，将name修改为哈基米</span><br><span class="line"><span class="keyword">update</span> employee <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;哈基米&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"># 修改id为<span class="number">1</span>的数据，将name修改为大狗叫，gender修改为耄耋</span><br><span class="line"><span class="keyword">update</span> employee <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;大狗叫&#x27;</span>, gender <span class="operator">=</span> <span class="string">&#x27;耄耋&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"># 将所有员工入职日期改成<span class="number">2025</span><span class="number">-10</span><span class="number">-13</span></span><br><span class="line"><span class="keyword">update</span> employee <span class="keyword">set</span> entrydate <span class="operator">=</span> <span class="string">&#x27;2025-10-13&#x27;</span>;</span><br></pre></td></tr></table></figure><p>接下来是删除数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 删除数据</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名 [<span class="keyword">WHERE</span> 条件]</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>DELETE语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的所有数据</li><li>DELETE语句不能删除某一字段的值（可以使用UPDATE）</li></ul><p><strong>示例</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 删除gender为耄耋的员工</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> employee <span class="keyword">where</span> gender <span class="operator">=</span> <span class="string">&#x27;耄耋&#x27;</span>;</span><br><span class="line"># 删除所有员工</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> employee；</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这篇文章系统讲解了 SQL 的 DML（数据操作语言, Data Manipulation Language） 的核心用法，主要聚焦在对表中数据的增、改、删三类操作，帮助初学者掌握数据库中最常用的实际数据操作语句。</summary>
    
    
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="SQL" scheme="https://www.jinhenghaoblog.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>R语言快速上手：从安装到矩阵操作的完整笔记</title>
    <link href="https://www.jinhenghaoblog.top/posts/20251010202836.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20251010202836.html</id>
    <published>2025-10-10T12:28:36.000Z</published>
    <updated>2025-10-10T12:38:24.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在前些年，笔者主要使用的是python语言进行数据的分析工作。在后面到研二期间进行生物数据的处理时，发现R语言在转录组分析或代谢组学分析的场景应用更加广泛，基于以上需求，遂开始对R语言的语法与数据结构进行学习并整理。</p><h2 id="R包的安装"><a href="#R包的安装" class="headerlink" title="R包的安装"></a>R包的安装</h2><p>常用模块的安装在R语言中是使用以下命令进行安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">&quot;xxx&quot;</span>)</span><br></pre></td></tr></table></figure><p>R包的更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update.packages(&quot;xxx&quot;)</span><br></pre></td></tr></table></figure><p>安装与应用的实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">&quot;BiocManager&quot;</span>, quietly = TRUE))</span><br><span class="line">    install.packages(<span class="string">&quot;BiocManager&quot;</span>)</span><br><span class="line"></span><br><span class="line">BiocManager::install(<span class="string">&quot;DESeq2&quot;</span>)</span><br><span class="line">library(DESeq2)</span><br></pre></td></tr></table></figure><p>在这里是先通过安装BiocManager，再通过BiocManager安装DESeq2的模块，而后引用DESeq2这个包</p><h2 id="R包的使用"><a href="#R包的使用" class="headerlink" title="R包的使用"></a>R包的使用</h2><p>引用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library(xxx)</span><br></pre></td></tr></table></figure><p>展示使用文档</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(package=<span class="string">&quot;xxx&quot;</span>)</span><br><span class="line"><span class="comment"># 实例</span></span><br><span class="line"><span class="built_in">help</span>(package=<span class="string">&quot;ggplot2&quot;</span>)</span><br></pre></td></tr></table></figure><p>移除使用中的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">detach(&quot;package:xxx&quot;)</span><br><span class="line"># 实例</span><br><span class="line">detach(&quot;package:ggplot2&quot;)</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>R语言的变量赋值是用箭头表示，也可以用等号表示，但不常用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- 123</span><br><span class="line">x = 123  # 不常用</span><br></pre></td></tr></table></figure><p>注意，变量名的第一个字符不能取为数字</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>数值型：123、123.123等</li><li>字符串型：”string”</li><li>逻辑型：TRUE、FALSE</li><li>日期型等</li></ul><h3 id="数据结构-1"><a href="#数据结构-1" class="headerlink" title="数据结构"></a>数据结构</h3><ul><li>向量、标量</li><li>矩阵</li><li>列表</li><li>数组</li><li>数据框</li><li>因子</li><li>时间序列等</li></ul><h4 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h4><p>用函数c来创建向量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- c(1, 2, 3, 4, 5)  # 数值型</span><br><span class="line">y &lt;- c(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;)  # 字符串型</span><br><span class="line">z &lt;- c(TRUE, FALSE, T, F) # 逻辑型</span><br></pre></td></tr></table></figure><p>数组的冒号功能类似于python中的range()函数，但区别是python中的range(1:5)只会输出1 2 3 4，不囊括5，而R语言是全部囊括</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; c(1:5)</span><br><span class="line">[1] 1 2 3 4 5</span><br></pre></td></tr></table></figure><p>使用seq去生成向量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; seq(from=1, to=5)</span><br><span class="line">[1] 1 2 3 4 5</span><br><span class="line">&gt; seq(from=1, to=6,by=2)  # 间隔为2</span><br><span class="line">[1] 1 3 5</span><br></pre></td></tr></table></figure><p>使用rep去生成含有重复元素的向量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; rep(2, 5)</span><br><span class="line">[1] 2 2 2 2 2</span><br></pre></td></tr></table></figure><p>注，向量的元素必须是同一个类型，不能混合</p><p>查看数组元素类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mode(x)</span><br></pre></td></tr></table></figure><h5 id="向量索引"><a href="#向量索引" class="headerlink" title="向量索引"></a>向量索引</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(<span class="number">1</span>:<span class="number">100</span>)</span><br><span class="line">&gt; x</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br><span class="line">&gt; length(x)</span><br><span class="line">[<span class="number">1</span>] <span class="number">100</span></span><br><span class="line">&gt; x[<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line">&gt; x[<span class="number">55</span>]</span><br><span class="line">[<span class="number">1</span>] <span class="number">55</span></span><br></pre></td></tr></table></figure><p>使用索引功能的语法与python相似，但不是从0开始，在这里索引到1是直接x[1]，而非像python那样x[0]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; x[-<span class="number">19</span>]</span><br><span class="line"> [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">20</span></span><br><span class="line">[<span class="number">20</span>]  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span></span><br><span class="line">[<span class="number">39</span>]  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span></span><br><span class="line">[<span class="number">58</span>]  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span></span><br><span class="line">[<span class="number">77</span>]  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span></span><br><span class="line">[<span class="number">96</span>]  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p>使用负索引输出除19外所有的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; x[c(<span class="number">4</span>:<span class="number">18</span>)]</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span></span><br><span class="line">&gt; x[c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">55</span>,<span class="number">18</span>)]</span><br><span class="line">[<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span> <span class="number">55</span> <span class="number">18</span></span><br></pre></td></tr></table></figure><p>综合使用向量进行索引操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; y &lt;- c(<span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line">&gt; y</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt; y[c(T,F,F,T,T)]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>使用逻辑型进行索引输出，TRUE输出，FALSE则不输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; y[c(T)]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt; y[c(F)]</span><br><span class="line">integer(<span class="number">0</span>)</span><br><span class="line">&gt; y[c(T,F)]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line">&gt; y[c(T,F,F)]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><p>使用逻辑型进行索引的进阶使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; z &lt;- c(<span class="string">&quot;one&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="string">&quot;three&quot;</span>, <span class="string">&quot;four&quot;</span>)</span><br><span class="line">&gt; z</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;one&quot;</span>   <span class="string">&quot;two&quot;</span>   <span class="string">&quot;three&quot;</span> <span class="string">&quot;four&quot;</span></span><br><span class="line">&gt; <span class="string">&quot;one&quot;</span> %<span class="keyword">in</span>% z</span><br><span class="line">[<span class="number">1</span>] TRUE</span><br><span class="line">&gt; z[z %<span class="keyword">in</span>% c(<span class="string">&quot;one&quot;</span>, <span class="string">&quot;two&quot;</span>)]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;one&quot;</span> <span class="string">&quot;two&quot;</span></span><br></pre></td></tr></table></figure><p>含字符串的向量的索引使用方法，”one” %in% z 表示one字符串是否在z里面，在就输出TRUE。根据该特性，可用于选中数组中含有的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; y</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt; names(y) &lt;- c(<span class="string">&quot;one&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="string">&quot;three&quot;</span>, <span class="string">&quot;four&quot;</span>, <span class="string">&quot;five&quot;</span>)</span><br><span class="line">&gt; y</span><br><span class="line">  one   two three  four  five</span><br><span class="line">    <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure><p>使用name() 给数组的元素进行命名。这个操作让我想起了python中字典这个数据结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; y[<span class="string">&quot;two&quot;</span>]</span><br><span class="line">two</span><br><span class="line">  <span class="number">2</span></span><br><span class="line">&gt; y[<span class="string">&quot;five&quot;</span>]</span><br><span class="line">five</span><br><span class="line">   <span class="number">5</span></span><br></pre></td></tr></table></figure><p>当然，可以通过命名的名称作为索引来输出y的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt; x</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br><span class="line">&gt; x[<span class="number">101</span>] &lt;- <span class="number">101</span></span><br><span class="line">&gt; x</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span></span><br><span class="line">&gt; x[c(<span class="number">102</span>:<span class="number">110</span>)] &lt;- c(<span class="number">102</span>:<span class="number">110</span>)</span><br><span class="line">&gt; x</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span> <span class="number">102</span> <span class="number">103</span> <span class="number">104</span> <span class="number">105</span> <span class="number">106</span> <span class="number">107</span> <span class="number">108</span></span><br><span class="line">[<span class="number">109</span>] <span class="number">109</span> <span class="number">110</span></span><br></pre></td></tr></table></figure><p>数组添加元素的方式也是简单暴力</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; append(x, values = <span class="number">99</span>, after = <span class="number">3</span>)</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>  <span class="number">99</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">18</span>  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">54</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">90</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span> <span class="number">102</span> <span class="number">103</span> <span class="number">104</span> <span class="number">105</span> <span class="number">106</span> <span class="number">107</span></span><br><span class="line">[<span class="number">109</span>] <span class="number">108</span> <span class="number">109</span> <span class="number">110</span></span><br></pre></td></tr></table></figure><p>使用append()函数，在数组的第三个索引后，添加99的数值</p><h5 id="向量运算"><a href="#向量运算" class="headerlink" title="向量运算"></a>向量运算</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt; x</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span> <span class="number">102</span> <span class="number">103</span> <span class="number">104</span> <span class="number">105</span> <span class="number">106</span> <span class="number">107</span> <span class="number">108</span></span><br><span class="line">[<span class="number">109</span>] <span class="number">109</span> <span class="number">110</span></span><br><span class="line">&gt; x+<span class="number">1</span></span><br><span class="line">  [<span class="number">1</span>]   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span>  <span class="number">55</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span>  <span class="number">91</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span> <span class="number">102</span> <span class="number">103</span> <span class="number">104</span> <span class="number">105</span> <span class="number">106</span> <span class="number">107</span> <span class="number">108</span> <span class="number">109</span></span><br><span class="line">[<span class="number">109</span>] <span class="number">110</span> <span class="number">111</span></span><br><span class="line">&gt; x-<span class="number">3</span></span><br><span class="line">  [<span class="number">1</span>]  -<span class="number">2</span>  -<span class="number">1</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span> <span class="number">102</span> <span class="number">103</span> <span class="number">104</span> <span class="number">105</span></span><br><span class="line">[<span class="number">109</span>] <span class="number">106</span> <span class="number">107</span></span><br></pre></td></tr></table></figure><p>向量的加减法是有着对每个元素进行加减的操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; x&gt;<span class="number">50</span></span><br><span class="line">  [<span class="number">1</span>] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE</span><br><span class="line"> [<span class="number">13</span>] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE</span><br><span class="line"> [<span class="number">25</span>] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE</span><br><span class="line"> [<span class="number">37</span>] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE</span><br><span class="line"> [<span class="number">49</span>] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE</span><br><span class="line"> [<span class="number">61</span>]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE</span><br><span class="line"> [<span class="number">73</span>]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE</span><br><span class="line"> [<span class="number">85</span>]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE</span><br><span class="line"> [<span class="number">97</span>]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE</span><br><span class="line">[<span class="number">109</span>]  TRUE  TRUE</span><br></pre></td></tr></table></figure><p>向量也可以以逻辑型进行输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(-<span class="number">5</span>:<span class="number">5</span>)</span><br><span class="line">&gt; x</span><br><span class="line"> [<span class="number">1</span>] -<span class="number">5</span> -<span class="number">4</span> -<span class="number">3</span> -<span class="number">2</span> -<span class="number">1</span>  <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span></span><br><span class="line">&gt; <span class="built_in">abs</span>(x)</span><br><span class="line"> [<span class="number">1</span>] <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt; sqrt(x)</span><br><span class="line"> [<span class="number">1</span>]      NaN      NaN      NaN      NaN      NaN <span class="number">0.000000</span> <span class="number">1.000000</span> <span class="number">1.414214</span></span><br><span class="line"> [<span class="number">9</span>] <span class="number">1.732051</span> <span class="number">2.000000</span> <span class="number">2.236068</span></span><br><span class="line">Warning message:</span><br><span class="line">In sqrt(x) : NaNs produced</span><br><span class="line">&gt; sqrt(<span class="number">25</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">5</span></span><br><span class="line">&gt; log(<span class="number">16</span>, base = <span class="number">2</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">4</span></span><br><span class="line">&gt; log10(<span class="number">10</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line">&gt; exp(x)</span><br><span class="line"> [<span class="number">1</span>] <span class="number">6.737947e-03</span> <span class="number">1.831564e-02</span> <span class="number">4.978707e-02</span> <span class="number">1.353353e-01</span> <span class="number">3.678794e-01</span></span><br><span class="line"> [<span class="number">6</span>] <span class="number">1.000000e+00</span> <span class="number">2.718282e+00</span> <span class="number">7.389056e+00</span> <span class="number">2.008554e+01</span> <span class="number">5.459815e+01</span></span><br><span class="line">[<span class="number">11</span>] <span class="number">1.484132e+02</span></span><br></pre></td></tr></table></figure><p>这里展示了r语言中常用的函数，部分函数与python一致。此外还有取整函数trunc()，四舍五入函数round()，还有sin(x)，cos(x)等，在此不作额外介绍。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; vec &lt;- <span class="number">1</span>:<span class="number">100</span></span><br><span class="line">&gt; vec</span><br><span class="line">  [<span class="number">1</span>]   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span></span><br><span class="line"> [<span class="number">19</span>]  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span></span><br><span class="line"> [<span class="number">37</span>]  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> [<span class="number">55</span>]  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span></span><br><span class="line"> [<span class="number">73</span>]  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> [<span class="number">91</span>]  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br><span class="line">&gt; <span class="built_in">sum</span>(vec)  <span class="comment"># 求和</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">5050</span></span><br><span class="line">&gt; <span class="built_in">max</span>(vec)  <span class="comment"># 取最大值</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">100</span></span><br><span class="line">&gt; <span class="built_in">min</span>(vec)  <span class="comment"># 取最小值</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line">&gt; <span class="built_in">range</span>(vec) <span class="comment"># 取最大和最小值</span></span><br><span class="line">[<span class="number">1</span>]   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">&gt; mean(vec)  <span class="comment"># 取平均值</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">50.5</span></span><br><span class="line">&gt; var(vec)   <span class="comment"># 取方差</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">841.6667</span></span><br><span class="line">&gt; median(vec)   <span class="comment"># 取中位数</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">50.5</span></span><br></pre></td></tr></table></figure><h4 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; m &lt;- matrix(<span class="number">1</span>:<span class="number">20</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">&gt; m</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line">[<span class="number">4</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br></pre></td></tr></table></figure><p>创建矩阵使用matrix函数，图例中创建一个4行5列的矩阵。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; m &lt;- matrix(<span class="number">1</span>:<span class="number">20</span>, <span class="number">4</span>)</span><br><span class="line">&gt; m</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line">[<span class="number">4</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line">&gt; m &lt;- matrix(<span class="number">1</span>:<span class="number">20</span>, <span class="number">4</span>, byrow=T)</span><br><span class="line">&gt; m</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>   <span class="number">10</span></span><br><span class="line">[<span class="number">3</span>,]   <span class="number">11</span>   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span></span><br><span class="line">[<span class="number">4</span>,]   <span class="number">16</span>   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>   <span class="number">20</span></span><br><span class="line">&gt; m &lt;- matrix(<span class="number">1</span>:<span class="number">20</span>, <span class="number">4</span>, byrow=F)</span><br><span class="line">&gt; m</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line">[<span class="number">4</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br></pre></td></tr></table></figure><p>可使用byrow进行行列排列的选择，TRUE是按行排列，FALSE是按列进行排列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; rnames &lt;- c(<span class="string">&quot;R1&quot;</span>, <span class="string">&quot;R2&quot;</span>, <span class="string">&quot;R3&quot;</span>, <span class="string">&quot;R4&quot;</span>)</span><br><span class="line">&gt; cnames &lt;- c(<span class="string">&quot;C1&quot;</span>, <span class="string">&quot;C2&quot;</span>, <span class="string">&quot;C3&quot;</span>, <span class="string">&quot;C4&quot;</span>, <span class="string">&quot;C5&quot;</span>)</span><br><span class="line">&gt; dimnames(m) &lt;- <span class="built_in">list</span>(rnames, cnames)</span><br><span class="line">&gt; m</span><br><span class="line">   C1 C2 C3 C4 C5</span><br><span class="line">R1  <span class="number">1</span>  <span class="number">5</span>  <span class="number">9</span> <span class="number">13</span> <span class="number">17</span></span><br><span class="line">R2  <span class="number">2</span>  <span class="number">6</span> <span class="number">10</span> <span class="number">14</span> <span class="number">18</span></span><br><span class="line">R3  <span class="number">3</span>  <span class="number">7</span> <span class="number">11</span> <span class="number">15</span> <span class="number">19</span></span><br><span class="line">R4  <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span> <span class="number">16</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p>可通过dimnames()函数，对矩阵进行命名，后续可通过名字，提取元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&gt; x</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line">&gt; dim(x) &lt;- c(<span class="number">2</span>,<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line">&gt; x</span><br><span class="line">, , <span class="number">1</span></span><br><span class="line"></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">3</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">4</span></span><br><span class="line"></span><br><span class="line">, , <span class="number">2</span></span><br><span class="line"></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">5</span>    <span class="number">7</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">6</span>    <span class="number">8</span></span><br><span class="line"></span><br><span class="line">, , <span class="number">3</span></span><br><span class="line"></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">9</span>   <span class="number">11</span></span><br><span class="line">[<span class="number">2</span>,]   <span class="number">10</span>   <span class="number">12</span></span><br><span class="line"></span><br><span class="line">, , <span class="number">4</span></span><br><span class="line"></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]   <span class="number">13</span>   <span class="number">15</span></span><br><span class="line">[<span class="number">2</span>,]   <span class="number">14</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line">, , <span class="number">5</span></span><br><span class="line"></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]   <span class="number">17</span>   <span class="number">19</span></span><br><span class="line">[<span class="number">2</span>,]   <span class="number">18</span>   <span class="number">20</span></span><br><span class="line"></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>使用dim()函数将矩阵转换为三维数组，这个操作有点像pytorch里面的reshape()函数，当然reshape()函数和dim()用法是不一样的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt; dim1 &lt;- c(<span class="string">&quot;A1&quot;</span>, <span class="string">&quot;A2&quot;</span>)</span><br><span class="line">&gt; dim2 &lt;- c(<span class="string">&quot;B1&quot;</span>, <span class="string">&quot;B2&quot;</span>, <span class="string">&quot;B3&quot;</span>)</span><br><span class="line">&gt; dim3 &lt;- c(<span class="string">&quot;C1&quot;</span>, <span class="string">&quot;C2&quot;</span>, <span class="string">&quot;C3&quot;</span>, <span class="string">&quot;C4&quot;</span>)</span><br><span class="line">&gt; z &lt;- array(<span class="number">1</span>:<span class="number">24</span>, c(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>), <span class="built_in">list</span>(dim1, dim2, dim3))</span><br><span class="line">&gt; z</span><br><span class="line">, , C1</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1  <span class="number">1</span>  <span class="number">3</span>  <span class="number">5</span></span><br><span class="line">A2  <span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span></span><br><span class="line"></span><br><span class="line">, , C2</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1  <span class="number">7</span>  <span class="number">9</span> <span class="number">11</span></span><br><span class="line">A2  <span class="number">8</span> <span class="number">10</span> <span class="number">12</span></span><br><span class="line"></span><br><span class="line">, , C3</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1 <span class="number">13</span> <span class="number">15</span> <span class="number">17</span></span><br><span class="line">A2 <span class="number">14</span> <span class="number">16</span> <span class="number">18</span></span><br><span class="line"></span><br><span class="line">, , C4</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1 <span class="number">19</span> <span class="number">21</span> <span class="number">23</span></span><br><span class="line">A2 <span class="number">20</span> <span class="number">22</span> <span class="number">24</span></span><br><span class="line"></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>这里展示了使用array()函数创建矩阵并命名的操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; m &lt;- matrix(<span class="number">1</span>:<span class="number">20</span>,<span class="number">4</span>,<span class="number">5</span>,byrow=T)</span><br><span class="line">&gt; m</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>   <span class="number">10</span></span><br><span class="line">[<span class="number">3</span>,]   <span class="number">11</span>   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span></span><br><span class="line">[<span class="number">4</span>,]   <span class="number">16</span>   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>   <span class="number">20</span></span><br><span class="line">&gt; m[<span class="number">1</span>,<span class="number">2</span>]  <span class="comment"># 访问第一行第二列的元素</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line">&gt; m[<span class="number">1</span>,]   <span class="comment"># 访问第一行的所有元素</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt; m[,<span class="number">2</span>]   <span class="comment"># 访问第二列的所有元素</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">2</span>  <span class="number">7</span> <span class="number">12</span> <span class="number">17</span></span><br><span class="line">&gt; m[-<span class="number">1</span>,<span class="number">2</span>] <span class="comment"># 访问除第一行的元素外，第二列的所有元素</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">7</span> <span class="number">12</span> <span class="number">17</span></span><br></pre></td></tr></table></figure><p>这里展示了怎么通过索引访问矩阵的元素的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; m</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>   <span class="number">10</span></span><br><span class="line">[<span class="number">3</span>,]   <span class="number">11</span>   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span></span><br><span class="line">[<span class="number">4</span>,]   <span class="number">16</span>   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>   <span class="number">20</span></span><br><span class="line">&gt; m+<span class="number">1</span></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>   <span class="number">10</span>   <span class="number">11</span></span><br><span class="line">[<span class="number">3</span>,]   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span>   <span class="number">16</span></span><br><span class="line">[<span class="number">4</span>,]   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>   <span class="number">20</span>   <span class="number">21</span></span><br><span class="line">&gt; m**<span class="number">2</span></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">4</span>    <span class="number">9</span>   <span class="number">16</span>   <span class="number">25</span></span><br><span class="line">[<span class="number">2</span>,]   <span class="number">36</span>   <span class="number">49</span>   <span class="number">64</span>   <span class="number">81</span>  <span class="number">100</span></span><br><span class="line">[<span class="number">3</span>,]  <span class="number">121</span>  <span class="number">144</span>  <span class="number">169</span>  <span class="number">196</span>  <span class="number">225</span></span><br><span class="line">[<span class="number">4</span>,]  <span class="number">256</span>  <span class="number">289</span>  <span class="number">324</span>  <span class="number">361</span>  <span class="number">400</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>这里展示了矩阵的计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; colSums(m)  <span class="comment"># 对列求和</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">34</span> <span class="number">38</span> <span class="number">42</span> <span class="number">46</span> <span class="number">50</span></span><br><span class="line">&gt; rowSums(m)  <span class="comment"># 对行求和</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">15</span> <span class="number">40</span> <span class="number">65</span> <span class="number">90</span></span><br><span class="line">&gt; colMeans(m) <span class="comment"># 对列求均值</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">8.5</span>  <span class="number">9.5</span> <span class="number">10.5</span> <span class="number">11.5</span> <span class="number">12.5</span></span><br><span class="line">&gt; rowMeans(m) <span class="comment"># 对行求均值</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">3</span>  <span class="number">8</span> <span class="number">13</span> <span class="number">18</span></span><br></pre></td></tr></table></figure><p>矩阵也可以计算其行列的sum与mean</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; n &lt;- matrix(<span class="number">1</span>:<span class="number">9</span>, <span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">&gt; n</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">4</span>    <span class="number">7</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">6</span>    <span class="number">9</span></span><br><span class="line">&gt; t &lt;- matrix(<span class="number">2</span>:<span class="number">10</span>, <span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">&gt; t</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">2</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">3</span>    <span class="number">6</span>    <span class="number">9</span></span><br><span class="line">[<span class="number">3</span>,]    <span class="number">4</span>    <span class="number">7</span>   <span class="number">10</span></span><br><span class="line">&gt; n * t  <span class="comment"># 矩阵内积</span></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">2</span>   <span class="number">20</span>   <span class="number">56</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">6</span>   <span class="number">30</span>   <span class="number">72</span></span><br><span class="line">[<span class="number">3</span>,]   <span class="number">12</span>   <span class="number">42</span>   <span class="number">90</span></span><br><span class="line">&gt; n %*% t  <span class="comment"># 矩阵外积</span></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]   <span class="number">42</span>   <span class="number">78</span>  <span class="number">114</span></span><br><span class="line">[<span class="number">2</span>,]   <span class="number">51</span>   <span class="number">96</span>  <span class="number">141</span></span><br><span class="line">[<span class="number">3</span>,]   <span class="number">60</span>  <span class="number">114</span>  <span class="number">168</span></span><br></pre></td></tr></table></figure><p>在这里展示了矩阵的乘法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; diag(n) <span class="comment"># 取矩阵的对角线元素</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">5</span> <span class="number">9</span></span><br><span class="line">&gt; t(n)    <span class="comment"># 将矩阵进行转置</span></span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">[<span class="number">3</span>,]    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span></span><br></pre></td></tr></table></figure><p>这里展示了求矩阵的对角线和矩阵的转置</p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>列表和向量类似，都是一维数据集合</p><p>向量只能存储一种数据类型，列表中的对象可以是R中的任何数据结构，甚至是列表本身。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; a &lt;- <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">&gt; b &lt;- c(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;do&#x27;</span>)</span><br><span class="line">&gt; c &lt;- c(TRUE,FALSE)</span><br><span class="line">&gt; mlist &lt;- <span class="built_in">list</span>(a, b, c)</span><br><span class="line">&gt; mlist</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;1&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;do&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>]  TRUE FALSE</span><br><span class="line"></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>使用list()函数去创建一个列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; mlist &lt;- <span class="built_in">list</span>(one=a, two=b, three=c)</span><br><span class="line">&gt; mlist</span><br><span class="line">$one</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">$two</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;1&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;do&quot;</span></span><br><span class="line"></span><br><span class="line">$three</span><br><span class="line">[<span class="number">1</span>]  TRUE FALSE</span><br><span class="line"></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>列表也可以取名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; mlist[<span class="number">1</span>]</span><br><span class="line">$one</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">&gt; mlist[c(<span class="number">1</span>:<span class="number">3</span>)]</span><br><span class="line">$one</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">$two</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;1&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;do&quot;</span></span><br><span class="line"></span><br><span class="line">$three</span><br><span class="line">[<span class="number">1</span>]  TRUE FALSE</span><br><span class="line"></span><br><span class="line">&gt; mlist[c(<span class="string">&#x27;one&#x27;</span>)]</span><br><span class="line">$one</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">&gt; mlist$one</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>列表可以用不同的方式去访问其元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt; mlist[[<span class="number">4</span>]] &lt;- c(<span class="number">5</span>:<span class="number">7</span>)  <span class="comment"># 给列表添加元素，注意要用双重中括号</span></span><br><span class="line">&gt; mlist</span><br><span class="line">$one</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">$two</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;1&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;do&quot;</span></span><br><span class="line"></span><br><span class="line">$three</span><br><span class="line">[<span class="number">1</span>]  TRUE FALSE</span><br><span class="line"></span><br><span class="line">[[<span class="number">4</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">5</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line"></span><br><span class="line">&gt; mlist[-<span class="number">1</span>]   <span class="comment"># 删除列表中的元素，使用负数进行删除</span></span><br><span class="line">$two</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;1&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;do&quot;</span></span><br><span class="line"></span><br><span class="line">$three</span><br><span class="line">[<span class="number">1</span>]  TRUE FALSE</span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">5</span> <span class="number">6</span> <span class="number">7</span></span><br></pre></td></tr></table></figure><p>这里反映了列表中如何添加与删除元素。同时也可以使用譬如mlist[3] &lt;- NULL来删除列表中的元素</p><h4 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h4><p>数据框是一种表格式的数据结构。数据框旨在模拟数据集，与其他统计软件例如SAS或者SPSS中的数据集的概念一致。</p><p>数据集通常是由数据构成的一个矩形数组，行表示观测，列表示变量。</p><p>数据框实际上是一个列表。列表中的元素是向量，这些向量构成数据框的列，每一列必须具有相同的长度，所以数据框是矩形结构，而且数据框的列必须命名。</p><p><img src="/images/image_1755607458353.png" alt="image.png"></p><p>数据框最常见的表示方式如图所示，其结构换个说法就像是一个excel的一个表格。</p><p>因此对数据框的总结如下：</p><ul><li>数据框形状上很像矩阵</li><li>数据框是比较规则的列表</li><li>矩阵必须是同一数据类型</li><li>数据框每一列必须为同一类型，每一行可以不同</li></ul><p>数据框的访问与列表一致，在这里不作重复阐述。</p><h4 id="因子"><a href="#因子" class="headerlink" title="因子"></a>因子</h4><p>因子，在R中名义型变量和有序性变量称为因子，factor。这些分类变量的可能值称为一个水平，level，例如good，better，best，都称为一个level。由这些水平值构成的向量就称为因子。</p><p>因子有着非常多的应用</p><ul><li>计算频数</li><li>独立性检验</li><li>相关性检验</li><li>方差分析</li><li>主成分分析</li><li>因子分析</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; f &lt;- factor(c(<span class="string">&quot;r&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;b&quot;</span>))</span><br><span class="line">&gt; f</span><br><span class="line">[<span class="number">1</span>] r r g b g b b</span><br><span class="line">Levels: b g r</span><br></pre></td></tr></table></figure><p>使用factor()函数定义一个因子，当然该函数同样也可以将向量转换为一个因子</p><h4 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h4><p>在R中，NA代表缺失值，NA是不可用，not available的简称，用来存储缺失信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; c &lt;- c(NA, <span class="number">1</span>:<span class="number">20</span>, NA, NA)</span><br><span class="line">&gt; c</span><br><span class="line"> [<span class="number">1</span>] NA  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> NA NA</span><br><span class="line">&gt; na.omit(c)</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line">attr(,<span class="string">&quot;na.action&quot;</span>)</span><br><span class="line">[<span class="number">1</span>]  <span class="number">1</span> <span class="number">22</span> <span class="number">23</span></span><br><span class="line">attr(,<span class="string">&quot;class&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;omit&quot;</span></span><br></pre></td></tr></table></figure><p>使用na.omit对数据中的缺失值进行删除</p><p><img src="/images/image_1755609247285.png" alt="image.png"></p><p>不同缺失数据以及它们的不同：</p><ul><li>NA是存在的值，但是不知道是多少</li><li>NaN是不存在的</li><li>Inf存在，分为正无穷Inf和负无穷Inf，表示不可能的值</li></ul><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; nchar(<span class="string">&quot;Hello World&quot;</span>)   <span class="comment"># 统计字符串个数</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">11</span></span><br><span class="line">&gt; length(c(<span class="string">&quot;Hello World&quot;</span>, <span class="string">&#x27;c&#x27;</span>)) <span class="comment"># 统计元素个数</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line">&gt; paste(<span class="string">&quot;I&quot;</span>,<span class="string">&quot;love&quot;</span>,<span class="string">&quot;you&quot;</span>)  <span class="comment"># 粘贴字符串为一块，默认使用空格来连接</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;I love you&quot;</span></span><br><span class="line">&gt; paste(<span class="string">&quot;I&quot;</span>,<span class="string">&quot;love&quot;</span>,<span class="string">&quot;you&quot;</span>, sep=<span class="string">&quot;-&quot;</span>) <span class="comment"># 特意使用-来连接字符串</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;I-love-you&quot;</span></span><br><span class="line">&gt; toupper(<span class="string">&quot;two&quot;</span>)  <span class="comment"># 全部转换为大写</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;TWO&quot;</span></span><br><span class="line">&gt; tolower(<span class="string">&quot;ONE&quot;</span>)  <span class="comment"># 全部转换为小写</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;one&quot;</span></span><br></pre></td></tr></table></figure><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(boolean_expression) &#123;</span><br><span class="line">    // 布尔表达式为真将执行的语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if语句语法如上所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- <span class="number">50L</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">is</span>.integer(x)) &#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;X 是一个整数&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;X 是一个整数&quot;</span></span><br></pre></td></tr></table></figure><p>if语句实例如上所示。</p><h3 id="if…else-语句"><a href="#if…else-语句" class="headerlink" title="if…else 语句"></a>if…else 语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(boolean_expression) &#123;</span><br><span class="line">    // 如果布尔表达式为真将执行的语句</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    // 如果布尔表达式为假将执行的语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if…else…语句语法如上所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(boolean_expression <span class="number">1</span>) &#123;</span><br><span class="line">    // 如果布尔表达式 boolean_expression <span class="number">1</span> 为真将执行的语句</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( boolean_expression <span class="number">2</span>) &#123;</span><br><span class="line">    // 如果布尔表达式 boolean_expression <span class="number">2</span> 为真将执行的语句</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( boolean_expression <span class="number">3</span>) &#123;</span><br><span class="line">    // 如果布尔表达式 boolean_expression <span class="number">3</span> 为真将执行的语句</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    // 以上所有的布尔表达式都为 false 时执行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果有多个条件判断，可以使用 if…else if…else：</p><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch(expression, case1, case2, case3....)</span><br></pre></td></tr></table></figure><p>switch语句语法如上所示：</p><p>switch语句的语法规则为：</p><ul><li>switch语句中的expression是一个常量表达式，可以是整数或字符串，整数返回对应的case位置值，如果整数不在位置范围，返回NULL</li><li>若匹配多个值则返回第一个</li><li>expression如果是字符串，则对应的是case中变量名对应的值，没有匹配则没有返回值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- switch(</span><br><span class="line"><span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;google&quot;</span>,</span><br><span class="line"><span class="string">&quot;runoob&quot;</span>,</span><br><span class="line"><span class="string">&quot;taobao&quot;</span>,</span><br><span class="line"><span class="string">&quot;weibo&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;taobao&quot;</span></span><br></pre></td></tr></table></figure><p>语法规则1的实例如上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">you.like&lt;-<span class="string">&quot;runoob&quot;</span></span><br><span class="line">switch(you.like, google=<span class="string">&quot;www.google.com&quot;</span>, runoob = <span class="string">&quot;www.runoob.com&quot;</span>, taobao = <span class="string">&quot;www.taobao.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;www.runoob.com&quot;</span></span><br></pre></td></tr></table></figure><p>语法规则2的实例如上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- switch(<span class="number">4</span>,<span class="string">&quot;google&quot;</span>,<span class="string">&quot;runoob&quot;</span>,<span class="string">&quot;taobao&quot;</span>)</span><br><span class="line">&gt; x</span><br><span class="line">NULL</span><br><span class="line">&gt; x &lt;- switch(<span class="number">4</span>,<span class="string">&quot;google&quot;</span>,<span class="string">&quot;runoob&quot;</span>,<span class="string">&quot;taobao&quot;</span>)</span><br><span class="line">&gt; x</span><br><span class="line">NULL</span><br></pre></td></tr></table></figure><p>语法规则3的实例如上</p><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="repeat"><a href="#repeat" class="headerlink" title="repeat"></a>repeat</h3><p>repeat 循环会一直执行代码，直到条件语句为 true 时才退出循环，退出要使用到 break 语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">repeat &#123; </span><br><span class="line">    // 相关代码 </span><br><span class="line">    <span class="keyword">if</span>(condition) &#123;</span><br><span class="line">       <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>repeat语法格式如上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">v &lt;- c(<span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Runoob&quot;</span>)</span><br><span class="line">cnt &lt;- <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (cnt &lt; <span class="number">7</span>) &#123;</span><br><span class="line">   <span class="built_in">print</span>(v)</span><br><span class="line">   cnt = cnt + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br></pre></td></tr></table></figure><p>repeat实例如上：</p><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>只要给定的条件为 true， while 循环语句会重复执行一个目标语句。这个语句基本上与python一致</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)</span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法如上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">v &lt;- c(<span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Runoob&quot;</span>)</span><br><span class="line">cnt &lt;- <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (cnt &lt; <span class="number">7</span>) &#123;</span><br><span class="line">   <span class="built_in">print</span>(v)</span><br><span class="line">   cnt = cnt + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Google&quot;</span> <span class="string">&quot;Runoob&quot;</span></span><br></pre></td></tr></table></figure><p>while循环实例如上：</p><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p>for 循环语句可以重复执行指定语句，重复次数可在 for 语句中控制，此语句与python也是比较相似。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (value <span class="keyword">in</span> vector) &#123;</span><br><span class="line">    statements</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>for循环的语法如上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v &lt;- LETTERS[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> ( i <span class="keyword">in</span> v) &#123;</span><br><span class="line">   <span class="built_in">print</span>(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;A&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;B&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;C&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;D&quot;</span></span><br></pre></td></tr></table></figure><p>for循环实例如上：</p><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>插入在循环体中，用于退出当前循环或语句，并开始脚本执行紧接着的语句，这个与python基本一致</p><h3 id="next"><a href="#next" class="headerlink" title="next"></a>next</h3><p>跳过当前循环，开始下一次循环，这个类似于python中的continue</p>]]></content>
    
    
    <summary type="html">这篇文章是一份系统且结构清晰的 R语言入门与语法实践笔记，从初学者的角度出发，围绕数据分析应用场景，对R语言的安装、包管理、变量与数据结构进行了逐步讲解，并辅以完整的交互式代码示例，帮助从Python转向R的科研人员快速上手。</summary>
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="R" scheme="https://www.jinhenghaoblog.top/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>SQL 实战入门：DDL数据库操作+三大数据类型全解析</title>
    <link href="https://www.jinhenghaoblog.top/posts/20251010180124.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20251010180124.html</id>
    <published>2025-10-10T10:01:24.000Z</published>
    <updated>2025-10-10T10:31:57.265Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 查询所有数据库</span><br><span class="line"><span class="keyword">SHOW</span> DATABASE;</span><br><span class="line"># 查询当前数据库</span><br><span class="line"><span class="keyword">SELECT</span> DATABASE();</span><br><span class="line"># 创建数据库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] 数据库名 [<span class="keyword">DEFAULT</span> CHARSET 字符集] [<span class="keyword">COLLATE</span> 排序规则];</span><br><span class="line"># 删除数据库</span><br><span class="line"><span class="keyword">DROP</span> DATABASE [IF <span class="keyword">EXISTS</span>] 数据库名;</span><br><span class="line"># 使用数据库</span><br><span class="line">USE 数据库名;</span><br></pre></td></tr></table></figure><h2 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查询当前数据库所有表</span><br><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br><span class="line"># 查询表结构</span><br><span class="line"><span class="keyword">DESC</span> 表名;</span><br><span class="line"># 查询指定表的建表语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE TABLE</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="表操作-创建"><a href="#表操作-创建" class="headerlink" title="表操作-创建"></a>表操作-创建</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> 表名(</span><br><span class="line">    字段<span class="number">1</span> 字段<span class="number">1</span>类型[COMMENT 字段<span class="number">1</span>注释],</span><br><span class="line">    字段<span class="number">2</span> 字段<span class="number">2</span>类型[COMMENT 字段<span class="number">2</span>注释],</span><br><span class="line">    字段<span class="number">3</span> 字段<span class="number">3</span>类型[COMMENT 字段<span class="number">3</span>注释],</span><br><span class="line">    ....</span><br><span class="line">    字段n 字段n类型[COMMENT 字段n注释],</span><br><span class="line">)[COMMENT 表注释];</span><br></pre></td></tr></table></figure><p><strong>例子</strong></p><p>创建这个表：</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>gender</th></tr></thead><tbody><tr><td>1</td><td>哈基米</td><td>3</td><td>男</td></tr><tr><td>2</td><td>哈基汪</td><td>10</td><td>男</td></tr><tr><td>3</td><td>飞基悲</td><td>1</td><td>男</td></tr></tbody></table><p><strong>语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> hachimi_tb(</span><br><span class="line">    id <span class="type">int</span> comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;名字&#x27;</span>,</span><br><span class="line">    age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    gender <span class="type">varchar</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">) comment <span class="string">&#x27;蜂蜜水表格&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="表操作——数据类型"><a href="#表操作——数据类型" class="headerlink" title="表操作——数据类型"></a>表操作——数据类型</h3><p>分为三类：</p><ul><li>数值类型</li><li>字符串类型</li><li>日期时间类型</li></ul><p><strong>数值类型</strong>：</p><table><thead><tr><th>分类</th><th>类型</th><th>大小</th><th>有符号(SIGNED)范围</th><th>无符号(UNSIGNED)范围</th><th>描述</th></tr></thead><tbody><tr><td>数值类型</td><td>TINYINT</td><td>1 byte</td><td>(-128, 127)</td><td>(0, 255)</td><td>小整数值</td></tr><tr><td>数值类型</td><td>SMALLINT</td><td>2 bytes</td><td>(-32768, 32767)</td><td>(0, 65535)</td><td>大整数值</td></tr><tr><td>数值类型</td><td>MEDIUMINT</td><td>3 bytes</td><td>(-8388608, 8388607)</td><td>(0, 16777215)</td><td>大整数值</td></tr><tr><td>数值类型</td><td>INT 或 INTEGER</td><td>4 bytes</td><td>(-2147483648, 2147483647)</td><td>(0, 4294967295)</td><td>大整数值</td></tr><tr><td>数值类型</td><td>BIGINT</td><td>8 bytes</td><td>(-2^63, 2^63-1)</td><td>(0, 2^64-1)</td><td>极大整数值</td></tr><tr><td>数值类型</td><td>FLOAT</td><td>4 bytes</td><td>(-3.402823466 E+38, 3.402823466 E+38)</td><td>0 和 (1.175494351 E-38, 3.402823466 E+38)</td><td>单精度浮点数值</td></tr><tr><td>数值类型</td><td>DOUBLE</td><td>8 bytes</td><td>(-1.7976931348623157 E+308, 1.7976931348623157 E+308)</td><td>0 和 (2.2250738585072014 E-308, 1.7976931348623157 E+308)</td><td>双精度浮点数值</td></tr><tr><td>数值类型</td><td>DECIMAL</td><td>依赖于 M(精度)和 D(标度)的值</td><td>依赖于 M(精度)和 D(标度)的值</td><td>依赖于 M(精度)和 D(标度)的值</td><td>小数值(精确定点数)</td></tr></tbody></table><p><strong>字符串类型</strong>：</p><table><thead><tr><th>分类</th><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>字符串类型</td><td>CHAR</td><td>0–255 bytes</td><td>定长字符串</td></tr><tr><td>字符串类型</td><td>VARCHAR</td><td>0–65535 bytes</td><td>变长字符串</td></tr><tr><td>字符串类型</td><td>TINYBLOB</td><td>0–255 bytes</td><td>不超过 255 个字符的二进制数据</td></tr><tr><td>字符串类型</td><td>TINYTEXT</td><td>0–255 bytes</td><td>短文本字符串</td></tr><tr><td>字符串类型</td><td>BLOB</td><td>0–65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>字符串类型</td><td>TEXT</td><td>0–65 535 bytes</td><td>长文本数据</td></tr><tr><td>字符串类型</td><td>MEDIUMBLOB</td><td>0–16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>字符串类型</td><td>MEDIUMTEXT</td><td>0–16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>字符串类型</td><td>LONGBLOB</td><td>0–4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>字符串类型</td><td>LONGTEXT</td><td>0–4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><p><strong>日期类型</strong>：</p><table><thead><tr><th>分类</th><th>类型</th><th>大小(字节)</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>日期类型</td><td>DATE</td><td>3</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>日期类型</td><td>TIME</td><td>3</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>日期类型</td><td>YEAR</td><td>1</td><td>1901 至 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>日期类型</td><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>日期类型</td><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p><strong>设计一张员工信息表，要求如下</strong>：</p><ul><li>编号（纯数字）</li><li>员工工号（字符串类型，长度不超过10位）</li><li>员工姓名（字符串类型，长度不超过10位）</li><li>性别（男&#x2F;女，存储一个汉字）</li><li>年龄（正常人年龄，不可能存储负数）</li><li>身份证号（二代身份证号均为18位）</li><li>入职时间（取值年月日即可）</li></ul><p>按照以上要求，用sql语句来表示的话则如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> emp(</span><br><span class="line">    id <span class="type">int</span> comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    worknumber <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;工号&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">    age tinyint unsigned comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    idcard <span class="type">char</span>(<span class="number">18</span>) comment <span class="string">&#x27;身份证号&#x27;</span>，</span><br><span class="line">    entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;员工表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="表操作——修改与删除"><a href="#表操作——修改与删除" class="headerlink" title="表操作——修改与删除"></a>表操作——修改与删除</h3><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 修改数据类型</span><br><span class="line"><span class="keyword">ALTER TABLE</span> 表名 MODIFY 字段名 新数据类型（长度）;</span><br><span class="line"></span><br><span class="line"># 修改字段名与字段类型</span><br><span class="line"><span class="keyword">ALTER TABLE</span> 表名 CHANGE 旧字段名 新字段名 类型（长度） [COMMENT注释] [约束];</span><br></pre></td></tr></table></figure><p>例子：</p><p>将emp表的nickname字段修改成username，类型为varchar(30)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> emp CHANGE nickname username <span class="type">varchar</span>(<span class="number">30</span>) COMMENT <span class="string">&#x27;昵称&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 删除字段</span><br><span class="line"><span class="keyword">ALTER TABLE</span> 表名 <span class="keyword">DROP</span> 字段名;</span><br></pre></td></tr></table></figure><p>例子：</p><p>将emp表的字段username删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> emp <span class="keyword">DROP</span> username;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改表名</span><br><span class="line"><span class="keyword">ALTER TABLE</span> 表名 RENAME <span class="keyword">TO</span> 新表名;</span><br></pre></td></tr></table></figure><p>例子：</p><p>将emp表的表名修改为employee</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> emp RENAME <span class="keyword">TO</span> employee;</span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 删除表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> [IF <span class="keyword">EXISTS</span>] 表名;</span><br><span class="line"></span><br><span class="line"># 删除指定表，并重新创建该表</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> 表名;</span><br></pre></td></tr></table></figure><p>注意：在删除表时，表中的全部数据也会被删除</p>]]></content>
    
    
    <summary type="html">这篇文章系统地讲解了 MySQL 数据库基础操作与表结构设计的核心知识，从数据库的创建、使用到表的增删改查，再到不同数据类型（数值、字符串、日期类型）的详细对比与应用，最后以“员工信息表”的 SQL 建表示例展示了完整的实践流程。</summary>
    
    
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="SQL" scheme="https://www.jinhenghaoblog.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>二代测序数据基础分析(一)</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250926164634.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250926164634.html</id>
    <published>2025-09-26T08:46:34.000Z</published>
    <updated>2025-09-28T13:17:07.155Z</updated>
    
    <content type="html"><![CDATA[<h2 id="技术介绍"><a href="#技术介绍" class="headerlink" title="技术介绍"></a>技术介绍</h2><ul><li>第二代测序技术，1990s - 2010s</li></ul><p>第二代测序技术从原理上分为三种方法：</p><ul><li>Roche 454测序法</li><li>IIIumina Solexa&#x2F;Hiseq测序法</li><li>ABI Solid测序法</li></ul><p>三种二代测序技术的对比：</p><p><img src="/images/image_1758975659796.png" alt="image.png"></p><p><strong>总结</strong></p><p>二代测序技术总体而言都有着同一种特性：</p><ul><li>需荧光或化学发光物质</li><li>需聚合酶或连接酶</li><li>需购买昂贵的试剂耗材和光学系统</li><li>需强大的图形分析计算能力</li></ul><h2 id="WES分析流程"><a href="#WES分析流程" class="headerlink" title="WES分析流程"></a>WES分析流程</h2><p>WES分析流程分为5个步骤：</p><ol><li>WES分析流程</li><li>数据质量控制</li><li>序列比对分析</li><li>变异检测</li><li>变异注释</li></ol><h3 id="一-WES分析流程"><a href="#一-WES分析流程" class="headerlink" title="一. WES分析流程"></a>一. WES分析流程</h3><p>原始测序数据——数据质量控制——序列比对——变异检测——变异注释——完成</p><h3 id="二-数据质量控制"><a href="#二-数据质量控制" class="headerlink" title="二. 数据质量控制"></a>二. 数据质量控制</h3><p>数据质控标准：</p><ol><li>去掉reads中的接头</li><li>去除低质量（BP&lt;20）碱基的reads</li><li>去除序列头尾的N碱基</li><li>去除头尾N碱基后若剩余reads长度小于40bp（双端），则丢弃该对序列</li></ol><p><strong>原始数据下载</strong>——sratoolkit软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">conda install sra-tools</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到sra数据，下载srr list</span></span><br><span class="line">prefetch SRR1139956</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sra转为fastq</span></span><br><span class="line">nohup fastq-dump -gzip --split-3 -O ./ SRR1139956.sra &amp;</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>fastq-dump [options] [path]</p><ol><li>–gzip: 使用gzip压缩输出文件</li><li>–split-3: 设置文件拆分，如果是双端的序列，则拆分为*_1.fastq和*_2.fastq</li><li>-O: 设置输出文件路径</li></ol><p>数据质量控制常用的软件是FASTQC，在这里不再赘述，详情请看<a href="https://">https://www.jinhenghaoblog.top/posts/20250828165237.html</a></p><h3 id="序列比对分析"><a href="#序列比对分析" class="headerlink" title="序列比对分析"></a>序列比对分析</h3><p><strong>进行序列比对分析所用到的软件为BWA</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载参考数据</span></span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg38/Homo_sapiens_assembly38.fasta.gz</span><br><span class="line">gunzip Homo_sapiens_assembly38.fasta.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建立索引</span></span><br><span class="line">bwa index Homo_sapiens_assembly38.fasta</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bwa进行比对</span></span><br><span class="line">nohup bwa mem -t 5 db/Homo_sapiens_assembly38.fasta test.fastq 1&gt;test.sam 2&gt;test.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里的test.fastq是经过过滤得到的fastq文件</span></span><br></pre></td></tr></table></figure><p>基本参数：</p><p>bwa mem [options] [idxbase] [in1.fq] [in2.fq]</p><ol><li>idxbase: 指定比对参考基因组序列（建好索引）</li><li>in1.fq、in2.fq：输入fastq文件</li><li>-t : 设置线程，这里设置的是5，具体看计算机配置</li></ol><p><strong>SAM文件格式转换及排序</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sam转bam</span></span><br><span class="line">samtool view -bS -h test.sam &gt; test.bam</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">排序bam</span></span><br><span class="line">samtools sort -@ 5 test.bam -o test.sort.bam</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>samtools sort [options] [in.bam] [out.prefix]</p><ol><li>-n:  根据reads名字排序</li><li>-o:  输出文件</li><li>-@: 设置线程，这里设置的是5，具体看计算机配置</li></ol><p><strong>标记&#x2F;删除PCR重复的reads——GATK</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建立输出文件夹</span></span><br><span class="line">mkdir gatk_markdup</span><br><span class="line">cd gatk_markdup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">标记PCR重复的reads</span></span><br><span class="line">gatk --java-options &quot;-Xmx20G -Djava.io.tmpdir=./&quot; MarkDuplicates -I test.sort.bam -M test.metrics 1&gt;test_log.mark 2 &gt;&amp;1</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>gatk MarkDuplicates -I [INPUT] -O [OUTPUT] -M [METRICS]</p><ol><li>MarkDuplicates: 鉴定重复的reads，是GATK中的一个工具</li><li>-I ： 输入文件</li><li>-O ： 输出文件</li><li>-M： 复制度量写入的文件</li></ol><h3 id="变异检测"><a href="#变异检测" class="headerlink" title="变异检测"></a>变异检测</h3><p><strong>变异检测——标记flagstat</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gatk --java-options &quot;-Xmx20G -Djava.io.tmpdir=./&quot; FixMateInformation -I test_marked.bam -O test_marked_fixed.bam -SO coordinate 1&gt;test_log.fix 2&gt;&amp;1</span><br><span class="line">samtools index test_marked_fixed.bam</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>gatk FixMateInformation -I [INPUT] -O [OUTPUT] -M [METRICS]</p><ol><li>FixMateInformation : 是GATK中的一个工具</li><li>-I：输入文件</li><li>-O：输出文件</li><li>-SO： 输出文件的排序方式，这里选择的是coordinate</li></ol><p><strong>变异检测——GATK找变异</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找变异</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载参考</span></span><br><span class="line">nohup wget ftp://gsapubftp-anonymous@ftp,broadinstitute.org/bundle/hg38/dbsnp 146.hg38.vcf.gz &amp;</span><br><span class="line">nohup wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg38/Mills and 1000G gold standard.indels.hg38.vcf.gz &amp;</span><br><span class="line"></span><br><span class="line">indel=&quot;Mills_and_1000G_gold_standard.indels.hg38.vcf.gz&quot;</span><br><span class="line">snp=&quot;dbsnp_146.hg38.vcf.gz&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行命令</span></span><br><span class="line">gatk --java-options &quot;-Xmx20G -Djava.io.tmpdir=./&quot; BaseRecalibrator -R /analysis/Database/hg38/hg38.fa -I test_marked_fixed.bam --known-sites $snp --known-sites $indel -O test_recal.table</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>gatk BaseRecalibrator -I [INPUT] -O [OUTPUT] -M [METRICS]</p><ol><li>–known-sites: 已知的多态位点数据库（可以指定多个）</li><li>-R： 参考序列文件</li><li>-I：输入文件</li><li>-O：输出文件</li></ol><p><strong>变异检测——矫正bam并生成VCF</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">————————矫正bam</span></span><br><span class="line">gatk --java-options &quot;-XmX20G -Djava.io.tmpdir=./&quot; ApplyBQSR -R /analysis/Database/hg38/hg38.fa -I test_marked_fixed.bam -bqsr test_recal_table -O test_bqsr.bam 1&gt;test_log.ApplyBQSR 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">——————calling variation得到vcf</span></span><br><span class="line">gatk --java-options &quot;-Xmx20G -Djava.io.tmpdir=./&quot; HaplotypeCaller -R /analysis/Database/hg38/hg38.fa -I test_bqsr.bam --dbsnp $snp -O test_raw.vcf 1&gt;test_log.HC 2&gt;&amp;1</span><br><span class="line">samtools index test.bqsr.bam</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>gatk HaplotypeCaller -i [INPUT] -O [OUTPUT] -M [METRICS]</p><ol><li>-R：参考序列文件</li><li>-I：输入文件</li><li>–dbsnp：dbSNP文件</li><li>-O：输出文件</li></ol><h3 id="变异注释"><a href="#变异注释" class="headerlink" title="变异注释"></a>变异注释</h3><p>变异注释使用的软件为Annovar软件</p><p>Annovar软件可实现三种不同的注释方式：</p><ul><li>确定SNP或CNV是否导致蛋白质编码变化和确定受影响的氨基酸</li><li>识别特定基因组区域的变异</li><li>鉴定特定数据库中记录的变异</li></ul><p><strong>Annovar——下载数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl annotate_variation.pl -buildver hg19 -downdb -webfrom annovar refGene humandb/</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>Perl annotate_variation.pl [options]</p><ol><li>-buildver: 基因组对应版本，这里是hg19</li><li>-webfrom annovar：指定从annovar库里下载，若annovar库中没有，则会从UCSC中下载</li><li>refGene：数据库名称</li><li>humandb&#x2F;：数据库存储路径</li></ol><p><strong>Annovar——变异注释</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入文件格式转换</span></span><br><span class="line">perl conver2annovar.pl -format vcf4 -allsample test.indel.vcf.gz -outfile anno</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注释</span></span><br><span class="line">perl annotate_variation.pl -generanno -buildver hg38 test.avinput humandb/</span><br></pre></td></tr></table></figure><p>基本参数：</p><p>Perl table_annovar.pl [options]</p><ol><li>-remove: 删除所有的临时文件</li><li>-geneanno：指定注释方法。这里表示gene-based，-regionanno表示region-based，–filer表示filter-based；</li><li>-buildver: 指定参考基因组</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;技术介绍&quot;&gt;&lt;a href=&quot;#技术介绍&quot; class=&quot;headerlink&quot; title=&quot;技术介绍&quot;&gt;&lt;/a&gt;技术介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;第二代测序技术，1990s - 2010s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二代测序技术从原理上分为三种方法：&lt;/</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="基因测序" scheme="https://www.jinhenghaoblog.top/tags/%E5%9F%BA%E5%9B%A0%E6%B5%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>python导入模块时遇到ModuleNotFoundError: No module named ’xxx‘</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250924211902.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250924211902.html</id>
    <published>2025-09-24T13:19:02.000Z</published>
    <updated>2025-09-24T13:25:06.588Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录以前学习python的时候遇到模块导入问题的解决方法</p><h2 id="问题出现过程"><a href="#问题出现过程" class="headerlink" title="问题出现过程"></a>问题出现过程</h2><p>在python导入模块时候遇到 ModuleNotFoundError: No module named “pandas”</p><p>出现错误的代码块如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p>出现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">&#x27;pandas&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在terminal下运行指令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用conda</span></span><br><span class="line">conda install pandas</span><br><span class="line"><span class="comment"># 使用pip</span></span><br><span class="line">pip install pandas</span><br><span class="line"><span class="comment"># 在该环境下使用pip安装</span></span><br><span class="line">python -m pip install pandas</span><br><span class="line"><span class="comment"># 基于清华源使用pip安装（推荐）</span></span><br><span class="line">pip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple pandas</span><br></pre></td></tr></table></figure><p>对于任何模块，若出现这种模块导入问题，可以将“pandas”换成需要要导入模块的名称</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;记录以前学习python的时候遇到模块导入问题的解决方法&lt;/p&gt;
&lt;h2 id=&quot;问题出现过程&quot;&gt;&lt;a href=&quot;#问题出现过程&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>秀丽隐杆线虫油红O响应值测定方法</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250921164632.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250921164632.html</id>
    <published>2025-09-21T08:46:32.000Z</published>
    <updated>2025-09-21T09:04:28.167Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在做秀丽隐杆线虫实验的时候，我们往往需要对线虫测定脂肪分布，这时候可能需要使用油红O染色法测定线虫脂肪滴的分布，在这里就简易地说一下测定的方法。</p><h2 id="实验准备"><a href="#实验准备" class="headerlink" title="实验准备"></a>实验准备</h2><p>需要有ImageJ软件、油红O线虫染色的照片如图所示：</p><p><img src="/images/0009.jpg.jpeg" alt="0009.jpg"></p><h2 id="测定过程"><a href="#测定过程" class="headerlink" title="测定过程"></a>测定过程</h2><p><strong>打开ImageJ</strong></p><p>其软件界面如图所示：</p><p><img src="/images/image_1758444689890.png" alt="image.png"></p><p>首先点击Analyze——Set Measurement..</p><p>按图选择所需要的指标：</p><p><img src="/images/image_1758444753749.png" alt="image.png"></p><p>点击OK</p><p><strong>打开线虫染色的图片</strong></p><p>点击File——Open——选择照片</p><p><strong>图片RGB转灰度处理</strong></p><p>点击Image——Type——8-Bits</p><p>此时图片变成灰度图：</p><p><img src="/images/image_1758444872657.png" alt="image.png"></p><p><strong>将图片反转选择</strong></p><p>点击Edit——Invert</p><p>此时图片变成如下图所示：</p><p><img src="/images/image_1758444923328.png" alt="image.png"></p><p><strong>设定阈值</strong></p><p>点击Image——Adjust——Threshold</p><p><img src="/images/image_1758444986876.png" alt="image.png"></p><p>按照所需要的数值进行调整，尽量将线虫染色的区域囊括进去</p><p>随后点击</p><p><img src="/images/image_1758445034671.png" alt="image.png"></p><p>对线虫本体进行框选</p><p><img src="/images/image_1758445066332.png" alt="image.png"></p><p><strong>测定响应值</strong></p><p>框选完毕后测定响应值，点击Analyze——Measure</p><p><img src="/images/image_1758445120455.png" alt="image.png"></p><p>得出测定油红O的响应值，一般文献会选择线虫的平均光密度</p><p>也就是平均光密度&#x3D;IntDen &#x2F; Area</p><p>在这里的数值为：152.035, 和Mean值基本相同，所以一般我会使用Mean数值进行记录</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在做秀丽隐杆线虫实验的时候，我们往往需要对线虫测定脂肪分布，这时候可能需要使用油红O染色法测定线虫脂肪滴的分布，在这里就简易地说一下测定的方</summary>
      
    
    
    
    <category term="湿实验相关" scheme="https://www.jinhenghaoblog.top/categories/%E6%B9%BF%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="秀丽隐杆线虫" scheme="https://www.jinhenghaoblog.top/tags/%E7%A7%80%E4%B8%BD%E9%9A%90%E6%9D%86%E7%BA%BF%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>基于David数据库与微生信平台进行Go-KEGG分析</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250916200356.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250916200356.html</id>
    <published>2025-09-16T12:03:56.000Z</published>
    <updated>2025-09-29T09:03:50.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="进入DAVID数据库"><a href="#进入DAVID数据库" class="headerlink" title="进入DAVID数据库"></a>进入DAVID数据库</h2><p><img src="/images/image_1758024448221.png" alt="image.png"></p><p>选择Functional Annotation</p><p><img src="/images/image_1758024643434.png" alt="image.png"></p><p><img src="/images/image_1758024806619.png" alt="image.png"></p><p>点击Functional Annotation Tool</p><p><img src="/images/image_1758024879283.png" alt="image.png"></p><p>选择GO与PathWays</p><p><img src="/images/image_1758024903110.png" alt="image.png"></p><p>GO这里选择BP、CC、MF</p><p>点击Chart可看到：</p><p><img src="/images/image_1758024938047.png" alt="image.png"></p><p>点击下载文件，将数据复制粘贴到EXCEL中备用。</p><p>其余的CC、MF也是同样的操作</p><p><img src="/images/image_1758024993375.png" alt="image.png"></p><p>PATHWAY这里我们只选择KEGG进行下载，也是点击Chart，下载文件并整理到excel中备用。</p><h2 id="整理从DAVID数据库下载的文件"><a href="#整理从DAVID数据库下载的文件" class="headerlink" title="整理从DAVID数据库下载的文件"></a>整理从DAVID数据库下载的文件</h2><p>一般下载下来的表格如图所示：</p><p><img src="/images/image_1758025214370.png" alt="image.png"></p><p>在这里分了4个Sheet，每个Sheet对应着从不同地方搜集下来的数据，分为BP、CC、MF、KEGG</p><h3 id="三合一图作法"><a href="#三合一图作法" class="headerlink" title="三合一图作法"></a>三合一图作法</h3><p>三合一的图需要以下格式：</p><p><img src="/images/image_1758025347789.png" alt="image.png"></p><p>只取Term和PValue的值，其中Term需要去除前面GO：xxxx的数值，留下后面的信号通路名字</p><p>同样的道理，分别搜集BP、CC、MF并累积到一个Sheet中，如图所示：</p><p><img src="/images/image_1758025436135.png" alt="image.png"></p><p>subgroup与Enrichment Score需要自己手动创建，其中subgroup对应的就是你搜集下来的数据是属于BP还是CC亦或者是MF。需要作一个提前标识。而Enrichment Score列实则上是由 -log10(PValue) 而来，在excel中设立公式，并ctrl左键拉动自动计算即可：<br><img src="/images/image_1758025578562.png" alt="image.png"></p><p>打开微生信</p><p><img src="/images/image_1758025629885.png" alt="image.png"></p><p>选择三合一功能</p><p><img src="/images/image_1758025800306.png" alt="image.png"></p><p>直接复制粘贴进去，按照自己的要求调整参数，并提交任务</p><p>最后输出图：</p><p><img src="/images/image_1758025839325.png" alt="image.png"></p><h3 id="富集分析图画法"><a href="#富集分析图画法" class="headerlink" title="富集分析图画法"></a>富集分析图画法</h3><p>这里点入KEGG，并对数据作提前处理：</p><p><img src="/images/image_1758025919949.png" alt="image.png"></p><p>这里选择Term、FDR、PValue、Count列进行整理。</p><p>然后打开微生信平台</p><p><img src="/images/image_1758026010830.png" alt="image.png"></p><p>选择富集气泡图</p><p><img src="/images/image_1758026068401.png" alt="image.png"></p><p>直接复制粘贴进去，按照自己的要求调整参数，并提交任务</p><p>最后输出图：</p><p><img src="/images/image_1758026089187.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">本文详细介绍了如何使用 DAVID 数据库进行 GO 和 KEGG 富集分析，包括数据下载、整理、三合一图制作以及在微生信平台上绘制富集分析图的完整流程，适用于生物信息学研究人员进行功能注释和通路分析。</summary>
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
    <category term="富集分析" scheme="https://www.jinhenghaoblog.top/tags/%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq基本介绍及实战——差异分析</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250903205237.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250903205237.html</id>
    <published>2025-09-03T12:52:37.000Z</published>
    <updated>2025-09-12T09:47:50.146Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战环节"><a href="#实战环节" class="headerlink" title="实战环节"></a>实战环节</h2><p>上一期对所拥有的数据做了个表达定量并生成了表达矩阵，现在进入差异分析的环节</p><h2 id="差异分析"><a href="#差异分析" class="headerlink" title="差异分析"></a>差异分析</h2><p>本次做差异分析所使用的工具是基于python的omicverse库</p><p>该模块的其安装方法也很简单，但需注意的是omicverse库必须在linux环境或windows系统的WSL环境下使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 使用conda</span></span><br><span class="line">conda create -n omicverse python=3.10</span><br><span class="line">conda activate omicverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装pytorch-gpu版 （二选一）</span></span><br><span class="line">conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装putorch-cpu版 （二选一）</span></span><br><span class="line">conda install pytorch torchvision torchaudio cpuonly -c pytorch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装pyg</span></span><br><span class="line">conda install pyg -c pyg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装omicverse</span></span><br><span class="line">conda install omicverse -c conda-forge</span><br></pre></td></tr></table></figure><p>本次分析选用的数据集是GSE118916。从GEO数据库中进行下载：</p><h2 id="使用omicverse进行常规的差异基因表达分析"><a href="#使用omicverse进行常规的差异基因表达分析" class="headerlink" title="使用omicverse进行常规的差异基因表达分析"></a>使用omicverse进行常规的差异基因表达分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据预处理</span></span><br><span class="line">expressionData = pd.read_csv(<span class="string">&quot;expression_data.csv&quot;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将没有基因名的数据索引拿出来</span></span><br><span class="line">indexNum = <span class="number">0</span></span><br><span class="line">indexList = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>(expressionData.iloc[:,<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;---&#x27;</span> == i:</span><br><span class="line">        <span class="comment"># print(indexNum)</span></span><br><span class="line">        indexList.append(indexNum)</span><br><span class="line">    indexNum += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">expressionData_Drop = expressionData.drop(indexList)</span><br><span class="line">expressionData_Drop</span><br></pre></td></tr></table></figure><p>输出：</p><table><thead><tr><th></th><th>Gene Symbol</th><th>GSM3351221</th><th>GSM3351222</th><th>GSM3351223</th><th>GSM3351224</th><th>GSM3351225</th><th>GSM3351226</th><th>GSM3351227</th><th>GSM3351228</th><th>…</th><th>GSM3351240</th><th>GSM3351241</th><th>GSM3351242</th><th>GSM3351243</th><th>GSM3351244</th><th>GSM3351245</th><th>GSM3351246</th><th>GSM3351247</th><th>GSM3351248</th><th>GSM3351249</th></tr></thead><tbody><tr><td>0</td><td>HIST1H3G</td><td>4.333162</td><td>3.393413</td><td>3.202298</td><td>3.273934</td><td>3.149646</td><td>3.371994</td><td>3.627498</td><td>3.046871</td><td>3.969594</td><td>…</td><td>3.623850</td><td>3.664705</td><td>3.340904</td><td>3.602020</td><td>3.331657</td><td>3.392765</td><td>3.493841</td><td>3.487211</td><td>3.391482</td></tr><tr><td>1</td><td>HIST1H3G</td><td>5.509134</td><td>5.405715</td><td>5.184302</td><td>4.883117</td><td>4.896176</td><td>5.113827</td><td>5.167449</td><td>5.110204</td><td>5.556905</td><td>…</td><td>4.851287</td><td>5.397218</td><td>5.153698</td><td>5.201280</td><td>4.851287</td><td>5.374734</td><td>5.276653</td><td>5.188680</td><td>5.140900</td></tr><tr><td>2</td><td>HIST1H3G</td><td>4.686904</td><td>3.871414</td><td>3.724224</td><td>3.397720</td><td>3.615277</td><td>3.841320</td><td>4.325271</td><td>3.560210</td><td>4.341479</td><td>…</td><td>3.992363</td><td>3.987619</td><td>3.687451</td><td>3.855043</td><td>3.694976</td><td>3.766741</td><td>3.963058</td><td>4.101157</td><td>3.854747</td></tr><tr><td>3</td><td>TNFAIP8L1</td><td>4.361757</td><td>4.285916</td><td>4.377757</td><td>5.367287</td><td>6.018805</td><td>4.888754</td><td>4.743503</td><td>4.430155</td><td>4.498028</td><td>…</td><td>3.740284</td><td>3.791165</td><td>4.206512</td><td>3.795124</td><td>3.853014</td><td>3.782595</td><td>3.757001</td><td>3.663455</td><td>3.869301</td></tr><tr><td>4</td><td>OTOP2</td><td>4.692442</td><td>4.467624</td><td>4.430727</td><td>4.132381</td><td>4.265175</td><td>4.237638</td><td>4.287581</td><td>4.428147</td><td>4.352447</td><td>…</td><td>4.834237</td><td>4.873393</td><td>4.521720</td><td>4.899339</td><td>5.179813</td><td>4.866155</td><td>5.235878</td><td>4.829041</td><td>4.766776</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>49297</td><td>GAPDH</td><td>2.250415</td><td>2.196336</td><td>2.188453</td><td>2.140965</td><td>2.205614</td><td>2.172010</td><td>2.216602</td><td>2.180626</td><td>2.197528</td><td>…</td><td>2.311198</td><td>2.319124</td><td>2.243291</td><td>2.354154</td><td>2.397206</td><td>2.348041</td><td>2.317698</td><td>2.321311</td><td>2.272872</td></tr><tr><td>49298</td><td>STAT1</td><td>2.349588</td><td>2.322962</td><td>2.277523</td><td>2.217424</td><td>2.293500</td><td>2.242945</td><td>2.283375</td><td>2.278833</td><td>2.299161</td><td>…</td><td>2.439090</td><td>2.465033</td><td>2.348560</td><td>2.472626</td><td>2.507350</td><td>2.452186</td><td>2.461888</td><td>2.474203</td><td>2.423064</td></tr><tr><td>49299</td><td>STAT1</td><td>2.671896</td><td>2.611722</td><td>2.612591</td><td>2.468304</td><td>2.585089</td><td>2.535129</td><td>2.606042</td><td>2.542626</td><td>2.584898</td><td>…</td><td>2.811227</td><td>2.805426</td><td>2.675989</td><td>2.881790</td><td>2.842771</td><td>2.828554</td><td>2.840772</td><td>2.815630</td><td>2.776199</td></tr><tr><td>49300</td><td>STAT1</td><td>3.041021</td><td>3.000218</td><td>2.956512</td><td>2.836378</td><td>2.925315</td><td>2.865108</td><td>2.960598</td><td>2.930377</td><td>2.947940</td><td>…</td><td>3.221686</td><td>3.264126</td><td>3.072335</td><td>3.282286</td><td>3.309083</td><td>3.238734</td><td>3.269109</td><td>3.202032</td><td>3.186877</td></tr><tr><td>49301</td><td>STAT1</td><td>3.521169</td><td>3.519029</td><td>3.485920</td><td>3.299582</td><td>3.402691</td><td>3.347042</td><td>3.427732</td><td>3.405621</td><td>3.408984</td><td>…</td><td>3.757983</td><td>3.837290</td><td>3.611317</td><td>3.841599</td><td>3.827958</td><td>3.830761</td><td>3.752328</td><td>3.749842</td><td>3.681698</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将第一列设置为表格的index</span></span><br><span class="line">expressionData_Drop.set_index([<span class="string">&quot;Gene Symbol&quot;</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入omicverse库</span></span><br><span class="line"><span class="keyword">import</span> omicverse <span class="keyword">as</span> ov</span><br><span class="line"><span class="keyword">import</span> scanpy <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">ov.ov_plot_set()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">🔬 Starting plot initialization...</span><br><span class="line">🧬 Detecting CUDA devices…</span><br><span class="line">🚫 No CUDA devices found</span><br><span class="line">✅ plot_set complete.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 差异分析</span></span><br><span class="line">dds = ov.bulk.pyDEG(expressionData_Drop)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该步骤是用于清洗数据，将重复的基因去除，保留表达量高的基因</span></span><br><span class="line">dds.drop_duplicates_index()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;... drop_duplicates_index success&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据标准化，去除表中可能的批次效应</span></span><br><span class="line">dds.normalize()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;... estimateSizeFactors and normalize success&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">... </span>drop_duplicates_index success</span><br><span class="line"><span class="meta">... </span>estimateSizeFactors <span class="keyword">and</span> normalize success</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从使用t检验方法计算矩阵中的差异表达基因，需要输入处理组和对照组。</span></span><br><span class="line"><span class="comment"># 处理组</span></span><br><span class="line">treatment_groups=[<span class="string">&#x27;GSM3351220&#x27;</span>,<span class="string">&#x27;GSM3351221&#x27;</span>,<span class="string">&#x27;GSM3351222&#x27;</span>,<span class="string">&#x27;GSM3351223&#x27;</span>,<span class="string">&#x27;GSM3351224&#x27;</span>,<span class="string">&#x27;GSM3351225&#x27;</span>,<span class="string">&#x27;GSM3351226&#x27;</span>,<span class="string">&#x27;GSM3351227&#x27;</span>,<span class="string">&#x27;GSM3351228&#x27;</span>,<span class="string">&#x27;GSM3351229&#x27;</span>,<span class="string">&#x27;GSM3351230&#x27;</span>,<span class="string">&#x27;GSM3351231&#x27;</span>,<span class="string">&#x27;GSM3351232&#x27;</span>,<span class="string">&#x27;GSM3351233&#x27;</span>,<span class="string">&#x27;GSM3351234&#x27;</span>]</span><br><span class="line"><span class="comment"># 对照组</span></span><br><span class="line">control_groups=[<span class="string">&#x27;GSM3351235&#x27;</span>,<span class="string">&#x27;GSM3351236&#x27;</span>,<span class="string">&#x27;GSM3351237&#x27;</span>,<span class="string">&#x27;GSM3351238&#x27;</span>,<span class="string">&#x27;GSM3351239&#x27;</span>,<span class="string">&#x27;GSM3351240&#x27;</span>,<span class="string">&#x27;GSM3351241&#x27;</span>,<span class="string">&#x27;GSM3351242&#x27;</span>,<span class="string">&#x27;GSM3351243&#x27;</span>,<span class="string">&#x27;GSM3351244&#x27;</span>,<span class="string">&#x27;GSM3351245&#x27;</span>,<span class="string">&#x27;GSM3351246&#x27;</span>,<span class="string">&#x27;GSM3351247&#x27;</span>,<span class="string">&#x27;GSM3351248&#x27;</span>,<span class="string">&#x27;GSM3351249&#x27;</span>]</span><br><span class="line">result_ttest=dds.deg_analysis(treatment_groups,control_groups,method=<span class="string">&#x27;ttest&#x27;</span>)</span><br><span class="line">result_ttest.sort_values(<span class="string">&#x27;qvalue&#x27;</span>).head()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">⚙️ You are using ttest method for differential expression analysis.</span><br><span class="line">⏰ Start to calculate qvalue...</span><br><span class="line">✅ Differential expression analysis completed.</span><br></pre></td></tr></table></figure><table><thead><tr><th>Gene Symbol</th><th>pvalue</th><th>qvalue</th><th>FoldChange</th><th>MaxBaseMean</th><th>BaseMean</th><th>log2(BaseMean)</th><th>log2FC</th><th>abs(log2FC)</th><th>size</th><th>-log(pvalue)</th><th>-log(qvalue)</th><th>sig</th></tr></thead><tbody><tr><td>DMRTA1</td><td>3.372637e-17</td><td>6.773267e-13</td><td>0.715917</td><td>5.498099</td><td>4.453653</td><td>2.154989</td><td>-0.482136</td><td>0.482136</td><td>0.071592</td><td>16.472030</td><td>12.169202</td><td>sig</td></tr><tr><td>CAPN13</td><td>1.526491e-15</td><td>1.532826e-11</td><td>0.849719</td><td>6.694391</td><td>6.051985</td><td>2.597408</td><td>-0.234943</td><td>0.234943</td><td>0.084972</td><td>14.816306</td><td>10.814507</td><td>sig</td></tr><tr><td>LNX1</td><td>3.725194e-15</td><td>2.493769e-11</td><td>0.763073</td><td>6.469154</td><td>5.483045</td><td>2.454977</td><td>-0.390108</td><td>0.390108</td><td>0.076307</td><td>14.428851</td><td>10.603144</td><td>sig</td></tr><tr><td>CAPN9</td><td>5.643624e-15</td><td>2.833522e-11</td><td>0.667939</td><td>7.792100</td><td>6.190386</td><td>2.630029</td><td>-0.582212</td><td>0.582212</td><td>0.066794</td><td>14.248442</td><td>10.547673</td><td>sig</td></tr><tr><td>CLDN12</td><td>7.299049e-15</td><td>2.931736e-11</td><td>0.903028</td><td>6.111705</td><td>5.725430</td><td>2.517384</td><td>-0.147158</td><td>0.147158</td><td>0.090303</td><td>14.136734</td><td>10.532875</td><td>sig</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个重要事项是，在处理差异表达基因（DEGs）时并未过滤低表达基因，在后续版本中会加入相应的处理功能。</span></span><br><span class="line"><span class="built_in">print</span>(dds.result.shape)</span><br><span class="line">dds.result=dds.result.loc[dds.result[<span class="string">&#x27;log2(BaseMean)&#x27;</span>]&gt;<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(dds.result.shape)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">(<span class="number">14028</span>, <span class="number">12</span>)</span><br><span class="line">(<span class="number">14028</span>, <span class="number">12</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下一步还需要设置Foldchange（倍数变化）的阈值，需要准备一个名为foldchange_set的方法来完成这一任务。</span></span><br><span class="line"><span class="comment"># 该功能会根据log2FC（以2为底的对数倍数变化）的分布自动计算合适的阈值，但也可以手动输入。</span></span><br><span class="line"><span class="comment"># -1 means automatically calculates</span></span><br><span class="line">dds.foldchange_set(fc_threshold=-<span class="number">1</span>,</span><br><span class="line">                   pval_threshold=<span class="number">0.05</span>,</span><br><span class="line">                   logp_max=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... Fold change threshold: 0.16936119706053465</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可视化差异表达基因（DEG）结果与特定基因</span></span><br><span class="line"><span class="comment"># 为可视化DEG分析结果，使用plot_volcano函数进行绘制。该函数可重点展示目标基因或高差异表达基因，需要输入以下参数：</span></span><br><span class="line"><span class="comment"># title：火山图标题</span></span><br><span class="line"><span class="comment"># figsize：图像尺寸</span></span><br><span class="line"><span class="comment"># plot_genes：需重点标注的目标基因列表</span></span><br><span class="line"><span class="comment"># plot_genes_num：若无特定目标基因，可设置自动标注的基因数量</span></span><br><span class="line">dds.plot_volcano(title=<span class="string">&#x27;DEG Analysis&#x27;</span>,figsize=(<span class="number">10</span>,<span class="number">10</span>),</span><br><span class="line">                 plot_genes_num=<span class="number">0</span>,plot_genes_fontsize=<span class="number">0</span>,)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">🌋 Volcano Plot Analysis:</span><br><span class="line">   Total genes: 14028</span><br><span class="line">   ↗️  Upregulated genes: 798</span><br><span class="line">   ↘️  Downregulated genes: 643</span><br><span class="line">   ➡️  Non-significant genes: 12587</span><br><span class="line">   🎯 Total significant genes: 1441</span><br><span class="line">   log2FC range: -0.99 to 0.79</span><br><span class="line">   qvalue range: 6.77e-13 to 1.00e+00</span><br><span class="line"></span><br><span class="line">⚙️  Current Function Parameters:</span><br><span class="line">   Data columns: pval_name=&#x27;qvalue&#x27;, fc_name=&#x27;log2FC&#x27;</span><br><span class="line">   Thresholds: pval_threshold=0.05, fc_max=0.16936119706053465, fc_min=-0.16936119706053465</span><br><span class="line">   Plot size: figsize=(10, 10)</span><br><span class="line">   Gene labels: plot_genes_num=0, plot_genes_fontsize=0</span><br><span class="line">   Custom genes: None (auto-select top genes)</span><br><span class="line"></span><br><span class="line">💡 Parameter Optimization Suggestions:</span><br><span class="line">   ✅ Current parameters are optimal for your data!</span><br><span class="line">────────────────────────────────────────────────────────────</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;AxesSubplot: title=&#123;&#x27;center&#x27;: &#x27;DEG Analysis&#x27;&#125;, xlabel=&#x27;$log_&#123;2&#125;FC$&#x27;, ylabel=&#x27;$-log_&#123;10&#125;(qvalue)$&#x27;&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/image_1757669142014.png" alt="image.png"></p><h2 id="使用-DEseq2-进行差异表达分析"><a href="#使用-DEseq2-进行差异表达分析" class="headerlink" title="使用 DEseq2 进行差异表达分析"></a>使用 DEseq2 进行差异表达分析</h2><p>借助 pyDEseq2，可以像 R 语言那样分析差异表达基因</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将表达矩阵全部转换为整数</span></span><br><span class="line">expressionData_int = expressionData_Drop.astype(<span class="built_in">int</span>)</span><br><span class="line"><span class="comment"># expressionData_int.head()</span></span><br><span class="line"></span><br><span class="line">dds_int = ov.bulk.pyDEG(expressionData_int)</span><br><span class="line"></span><br><span class="line">dds_int.drop_duplicates_index()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;... drop_duplicates_index success&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... drop_duplicates_index success</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从使用DEseq2方法计算矩阵中的差异表达基因，需要输入处理组和对照组。</span></span><br><span class="line"><span class="comment"># 处理组</span></span><br><span class="line">treatment_groups=[<span class="string">&#x27;GSM3351220&#x27;</span>,<span class="string">&#x27;GSM3351221&#x27;</span>,<span class="string">&#x27;GSM3351222&#x27;</span>,<span class="string">&#x27;GSM3351223&#x27;</span>,<span class="string">&#x27;GSM3351224&#x27;</span>,<span class="string">&#x27;GSM3351225&#x27;</span>,<span class="string">&#x27;GSM3351226&#x27;</span>,<span class="string">&#x27;GSM3351227&#x27;</span>,<span class="string">&#x27;GSM3351228&#x27;</span>,<span class="string">&#x27;GSM3351229&#x27;</span>,<span class="string">&#x27;GSM3351230&#x27;</span>,<span class="string">&#x27;GSM3351231&#x27;</span>,<span class="string">&#x27;GSM3351232&#x27;</span>,<span class="string">&#x27;GSM3351233&#x27;</span>,<span class="string">&#x27;GSM3351234&#x27;</span>]</span><br><span class="line"><span class="comment"># 对照组</span></span><br><span class="line">control_groups=[<span class="string">&#x27;GSM3351235&#x27;</span>,<span class="string">&#x27;GSM3351236&#x27;</span>,<span class="string">&#x27;GSM3351237&#x27;</span>,<span class="string">&#x27;GSM3351238&#x27;</span>,<span class="string">&#x27;GSM3351239&#x27;</span>,<span class="string">&#x27;GSM3351240&#x27;</span>,<span class="string">&#x27;GSM3351241&#x27;</span>,<span class="string">&#x27;GSM3351242&#x27;</span>,<span class="string">&#x27;GSM3351243&#x27;</span>,<span class="string">&#x27;GSM3351244&#x27;</span>,<span class="string">&#x27;GSM3351245&#x27;</span>,<span class="string">&#x27;GSM3351246&#x27;</span>,<span class="string">&#x27;GSM3351247&#x27;</span>,<span class="string">&#x27;GSM3351248&#x27;</span>,<span class="string">&#x27;GSM3351249&#x27;</span>]</span><br><span class="line">result = dds_int.deg_analysis(treatment_groups,control_groups,method=<span class="string">&#x27;DEseq2&#x27;</span>)</span><br><span class="line"><span class="comment"># result_ttest.sort_values(&#x27;qvalue&#x27;).head()</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">⚙️ You are using DEseq2 method for differential expression analysis.</span><br><span class="line">⏰ Start to create DeseqDataSet...</span><br><span class="line">Using None as control genes, passed at DeseqDataSet initialization</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Fitting size factors...</span><br><span class="line">... done in 0.05 seconds.</span><br><span class="line"></span><br><span class="line">Fitting dispersions...</span><br><span class="line">... done in 0.65 seconds.</span><br><span class="line"></span><br><span class="line">Fitting dispersion trend curve...</span><br><span class="line">... done in 0.22 seconds.</span><br><span class="line"></span><br><span class="line">Fitting MAP dispersions...</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logres_prior=1.5254760032591015, sigma_prior=1.4514357345950912</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">... done in 1.82 seconds.</span><br><span class="line"></span><br><span class="line">Fitting LFCs...</span><br><span class="line">... done in 0.77 seconds.</span><br><span class="line"></span><br><span class="line">Calculating cook&#x27;s distance...</span><br><span class="line">... done in 0.02 seconds.</span><br><span class="line"></span><br><span class="line">Replacing 0 outlier genes.</span><br><span class="line"></span><br><span class="line">Running Wald tests...</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Log2 fold change &amp; Wald test p-value: condition Treatment vs Control</span><br><span class="line">                              baseMean  log2FoldChange     lfcSE      stat  \</span><br><span class="line">Gene Symbol                                                                </span><br><span class="line">COX3 /// MYBPC3 /// SLC12A1  13.074116        0.001168  0.154571  0.007559   </span><br><span class="line">TPT1                         13.007369        0.001171  0.154922  0.007558   </span><br><span class="line">ND4                          13.007369        0.001171  0.154922  0.007558   </span><br><span class="line">ATP13A5 /// HARS             12.974036       -0.006246  0.155129 -0.040261   </span><br><span class="line">B2M                          12.840421       -0.021317  0.155953 -0.136689   </span><br><span class="line">...                                ...             ...       ...       ...   </span><br><span class="line">SSX1                          1.300795       -0.072834  0.473870 -0.153699   </span><br><span class="line">C2orf83                       1.300624       -0.221223  0.475017 -0.465715   </span><br><span class="line">CLCA3P                        1.233980       -0.551375  0.494168 -1.115764   </span><br><span class="line">UGT2B11                       1.200886       -0.484293  0.501002 -0.966649   </span><br><span class="line">RAD21L1                       1.233900       -0.076840  0.486072 -0.158084   </span><br><span class="line"></span><br><span class="line">                               pvalue      padj  </span><br><span class="line">Gene Symbol                                    </span><br><span class="line">COX3 /// MYBPC3 /// SLC12A1  0.993969  0.997498  </span><br><span class="line">TPT1                         0.993969  0.997498  </span><br><span class="line">ND4                          0.993969  0.997498  </span><br><span class="line">ATP13A5 /// HARS             0.967885  0.997498  </span><br><span class="line">B2M                          0.891277  0.997498  </span><br><span class="line">...                               ...       ...  </span><br><span class="line">SSX1                         0.877847       NaN  </span><br><span class="line">C2orf83                      0.641419       NaN  </span><br><span class="line">CLCA3P                       0.264523       NaN  </span><br><span class="line">UGT2B11                      0.333719       NaN  </span><br><span class="line">RAD21L1                      0.874391       NaN  </span><br><span class="line"></span><br><span class="line">[20083 rows x 6 columns]</span><br><span class="line">✅ Differential expression analysis completed.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... done in 1.17 seconds.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(result.shape)</span><br><span class="line">result=result.loc[result[<span class="string">&#x27;log2(BaseMean)&#x27;</span>]&gt;<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(result.shape)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(20083, 14)</span><br><span class="line">(20083, 14)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要设置Foldchange（倍数变化）的阈值</span></span><br><span class="line">dds_int.foldchange_set(fc_threshold=-<span class="number">1</span>,</span><br><span class="line">                   pval_threshold=<span class="number">0.05</span>,</span><br><span class="line">                   logp_max=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... Fold change threshold: 0.2874723264386634</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 差异基因的可视化</span></span><br><span class="line">dds.plot_volcano(title=<span class="string">&#x27;DEG Analysis&#x27;</span>,figsize=(<span class="number">10</span>,<span class="number">10</span>),</span><br><span class="line">                 plot_genes_num=<span class="number">8</span>,plot_genes_fontsize=<span class="number">12</span>,)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">🌋 Volcano Plot Analysis:</span><br><span class="line">   Total genes: 14028</span><br><span class="line">   ↗️  Upregulated genes: 798</span><br><span class="line">   ↘️  Downregulated genes: 643</span><br><span class="line">   ➡️  Non-significant genes: 12587</span><br><span class="line">   🎯 Total significant genes: 1441</span><br><span class="line">   log2FC range: -0.99 to 0.79</span><br><span class="line">   qvalue range: 6.77e-13 to 1.00e+00</span><br><span class="line"></span><br><span class="line">⚙️  Current Function Parameters:</span><br><span class="line">   Data columns: pval_name=&#x27;qvalue&#x27;, fc_name=&#x27;log2FC&#x27;</span><br><span class="line">   Thresholds: pval_threshold=0.05, fc_max=0.16936119706053465, fc_min=-0.16936119706053465</span><br><span class="line">   Plot size: figsize=(10, 10)</span><br><span class="line">   Gene labels: plot_genes_num=8, plot_genes_fontsize=12</span><br><span class="line">   Custom genes: None (auto-select top genes)</span><br><span class="line"></span><br><span class="line">💡 Parameter Optimization Suggestions:</span><br><span class="line">   ✅ Current parameters are optimal for your data!</span><br><span class="line">────────────────────────────────────────────────────────────</span><br></pre></td></tr></table></figure><p><img src="/images/image_1757670416755.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 特定基因表达量分析</span></span><br><span class="line">dds_int.plot_boxplot(genes=[<span class="string">&#x27;CAPN9&#x27;</span>,<span class="string">&#x27;LNX1&#x27;</span>,<span class="string">&#x27;PFDN2&#x27;</span>,<span class="string">&#x27;CDK4&#x27;</span>],treatment_groups=treatment_groups,</span><br><span class="line">                control_groups=control_groups,figsize=(<span class="number">4</span>,<span class="number">6</span>),fontsize=<span class="number">12</span>,</span><br><span class="line">                 legend_bbox=(<span class="number">1</span>,<span class="number">0.55</span>))</span><br></pre></td></tr></table></figure><p>输出：<br><img src="/images/image_1757670446701.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个基因的差异分析</span></span><br><span class="line">dds_int.plot_boxplot(genes=[<span class="string">&#x27;CAPN9&#x27;</span>],treatment_groups=treatment_groups,</span><br><span class="line">                control_groups=control_groups,figsize=(<span class="number">2</span>,<span class="number">3</span>),fontsize=<span class="number">12</span>,</span><br><span class="line">                 legend_bbox=(<span class="number">2</span>,<span class="number">0.55</span>))</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="/images/image_1757670467621.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实战环节&quot;&gt;&lt;a href=&quot;#实战环节&quot; class=&quot;headerlink&quot; title=&quot;实战环节&quot;&gt;&lt;/a&gt;实战环节&lt;/h2&gt;&lt;p&gt;上一期对所拥有的数据做了个表达定量并生成了表达矩阵，现在进入差异分析的环节&lt;/p&gt;
&lt;h2 id=&quot;差异分析&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="R" scheme="https://www.jinhenghaoblog.top/tags/R/"/>
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
    <category term="转录组学" scheme="https://www.jinhenghaoblog.top/tags/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq基本介绍及实战——表达定量</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250831205237.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250831205237.html</id>
    <published>2025-08-31T12:52:37.000Z</published>
    <updated>2025-09-04T10:00:24.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战环节"><a href="#实战环节" class="headerlink" title="实战环节"></a>实战环节</h2><p>上一期对所拥有的数据做了个序列比对，现在进入表达定量的环节</p><h2 id="表达定量"><a href="#表达定量" class="headerlink" title="表达定量"></a>表达定量</h2><p>在进行表达定量的处理之前，需要对原始的比对文件进行处理，这里就有以下步骤：</p><ul><li>使用picard &#x2F; samtools</li><li>将sam格式转换为bam格式</li><li>对bam文件进行排序</li><li>去除比对得分较低的序列</li><li>如果需要可以去除重复reads</li></ul><p>在这里将会以三种方法进行表达定量的操作，分别是STAR+RSEM进行表达定量，另外一个就是使用Kallisto进行表达定量操作。最后一个就是使用featureCounts软件进行操作。</p><h3 id="STAR-RSEM"><a href="#STAR-RSEM" class="headerlink" title="STAR+RSEM"></a>STAR+RSEM</h3><p>这个方法分为两个步骤</p><ul><li>准定定量分析所需文件</li><li>利用STAR结果进行定量分析</li></ul><p>在进行这个方法之前，需要对RSEM这个软件进行安装</p><p>RSEM这个软件的安装方法同样也很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载 RSEM</span></span><br><span class="line">wget -c https://github.com/deweylab/RSEM/archive/v1.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> RSEM-1.3.1</span><br><span class="line"><span class="comment">## 安装 RSEM</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>接下来构建准备文件，在主目录下创建arab_RSEM文件夹，随后输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsem-prepare-reference --gtf 00ref/Araport11_GFF3_genes_transposons.201606.gtf 00ref/TAIR10_Chr.all.fasta arab_RSEM/arab_rsem</span><br></pre></td></tr></table></figure><p>该命令有三个参数：</p><ul><li>–gtf：标注GTF文件的位置在哪</li><li>00ref&#x2F;TAIR10_Chr.all.fasta：该参数是表示参考基因组的位置在哪</li><li>arab_RSEM&#x2F;arab_rsem：表示输出文件的位置</li></ul><p>运行后的输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">rsem-extract-reference-transcripts arab_RSEM/arab_rsem 0 00ref/Araport11_GFF3_genes_transposons.201606.gtf None 0 00ref/TAIR10_Chr.all.fasta</span><br><span class="line">Parsed 200000 lines</span><br><span class="line">Parsed 400000 lines</span><br><span class="line">Parsed 600000 lines</span><br><span class="line">Parsed 800000 lines</span><br><span class="line">Parsing gtf File is <span class="keyword">done</span>!</span><br><span class="line">00ref/TAIR10_Chr.all.fasta is processed!</span><br><span class="line">58699 transcripts are extracted.</span><br><span class="line">Extracting sequences is <span class="keyword">done</span>!</span><br><span class="line">Group File is generated!</span><br><span class="line">Transcript Information File is generated!</span><br><span class="line">Chromosome List File is generated!</span><br><span class="line">Extracted Sequences File is generated!</span><br><span class="line"></span><br><span class="line">rsem-preref arab_RSEM/arab_rsem.transcripts.fa 1 arab_RSEM/arab_rsem</span><br><span class="line">Refs.makeRefs finished!</span><br><span class="line">Refs.saveRefs finished!</span><br><span class="line">arab_RSEM/arab_rsem.idx.fa is generated!</span><br><span class="line">arab_RSEM/arab_rsem.n2g.idx.fa is generated!</span><br></pre></td></tr></table></figure><p>查看arab_RSEM文件夹可看到生成一批文件：</p><p><img src="/images/image_1756805714297.png" alt="image.png"></p><p>这些文件表明RSEM的准备工作已经完成。</p><p>在准备好文件后，下一步就是调用RSEM进行表达量的计算，在shell中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsem-calculate-expression --paired-end --no-bam-output --alignments -p 5 -q 03align_out/sample1_Aligned.toTranscriptome.out.bam arab_RSEM/arab_rsem 04rsem_out/sample1_rsem</span><br></pre></td></tr></table></figure><p>接下来解释一下各种参数的含义：</p><ul><li>paired-end：表示序列是双端测序，如果用到双端测序则需要加上这个参数</li><li>no-bam-output：只进行定量的表达计算，不进行bam的输出</li><li>-p：表示运行所用的进程数目</li><li>-q：输入转录本文件</li><li>arab_RSEM&#x2F;arab_rsem：表示上一步索引文件的位置</li><li>04rsem_out&#x2F;sample1_rsem：输出文件的目录以及前缀</li></ul><p>在shell中的输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rsem-parse-alignments arab_RSEM/arab_rsem 04rsem_out/sample1_rsem.temp/sample1_rsem 04rsem_out/sample1_rsem.<span class="built_in">stat</span>/sample1_rsem 03align_out/sample1_Aligned.toTranscriptome.out.bam 3 -tag XM -q</span><br><span class="line"></span><br><span class="line">rsem-build-read-index 32 1 1 04rsem_out/sample1_rsem.temp/sample1_rsem_alignable_1.fq 04rsem_out/sample1_rsem.temp/sample1_rsem_alignable_2.fq</span><br><span class="line"></span><br><span class="line">rsem-run-em arab_RSEM/arab_rsem 3 04rsem_out/sample1_rsem 04rsem_out/sample1_rsem.temp/sample1_rsem 04rsem_out/sample1_rsem.<span class="built_in">stat</span>/sample1_rsem -p 5 -q</span><br><span class="line">Time Used <span class="keyword">for</span> EM.cpp : 0 h 00 m 10 s</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf 04rsem_out/sample1_rsem.temp</span><br></pre></td></tr></table></figure><p>其输出如下图所示:</p><p><img src="/images/image_1756814150541.png" alt="image.png"></p><p>这里有两个结果，一个是基于基因的结果，另外一个是基于转录本的结果</p><p>其中sample1_rsem.genes.results如图所示：</p><p><img src="/images/image_1756814732260.png" alt="image.png"></p><p>而sample1_rsem.isoforms.results如图所示：</p><p><img src="/images/image_1756814759119.png" alt="image.png"></p><p>这个就是STAR+RSEM进行表达定量的一个流程</p><h3 id="Kallisto分析"><a href="#Kallisto分析" class="headerlink" title="Kallisto分析"></a>Kallisto分析</h3><p>这个方法也是分为两个步骤</p><ul><li>利用转录本参考序列文件构建索引</li><li>进行无比对定量分析</li></ul><p>在运行这个命令之前，需要对kallisto进行安装，同样的，这个软件的安装方法也很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conda安装</span></span><br><span class="line">conda install kallisto</span><br><span class="line"><span class="comment"># github安装</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/pachterlab/kallisto.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> kallisto</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line">cmake .. <span class="comment"># 这里没有sudo权限的装不上 建议改为：</span></span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX:PATH=<span class="variable">$HOME</span>/kallisto/bin <span class="comment"># 或者自己的其他目录</span></span><br><span class="line"></span><br><span class="line">make <span class="comment"># 或者make install</span></span><br></pre></td></tr></table></figure><p>安装完毕之后我们运行命令以构建索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">madir arab_kallisto</span><br><span class="line"><span class="built_in">cd</span> arab_kallisto</span><br><span class="line">kallisto index -i arab_kallisto ../arab_RSEM/arab_rsem.transcripts.fa</span><br></pre></td></tr></table></figure><p>这时候的shell会输出一段过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[build] loading fasta file ../arab_RSEM/arab_rsem.transcripts.fa</span><br><span class="line">[build] k-mer length: 31</span><br><span class="line">[build] warning: clipped off poly-A <span class="built_in">tail</span> (longer than 10)</span><br><span class="line">        from 26 target sequences</span><br><span class="line">[build] warning: replaced 697 non-ACGUT characters <span class="keyword">in</span> the input sequence</span><br><span class="line">        with pseudorandom nucleotides</span><br><span class="line">KmerStream::KmerStream(): Start computing k-mer cardinality estimations (1/2)</span><br><span class="line">KmerStream::KmerStream(): Start computing k-mer cardinality estimations (1/2)</span><br><span class="line">KmerStream::KmerStream(): Finished</span><br><span class="line">CompactedDBG::build(): Estimated number of k-mers occurring at least once: 54535532</span><br><span class="line">CompactedDBG::build(): Estimated number of minimizer occurring at least once: 13421357</span><br><span class="line">CompactedDBG::filter(): Processed 97555899 k-mers <span class="keyword">in</span> 58699 reads</span><br><span class="line">CompactedDBG::filter(): Found 54357654 unique k-mers</span><br><span class="line">CompactedDBG::filter(): Number of blocks <span class="keyword">in</span> Bloom filter is 372803</span><br><span class="line">CompactedDBG::construct(): Extract approximate unitigs (1/2)</span><br><span class="line">CompactedDBG::construct(): Extract approximate unitigs (2/2)</span><br><span class="line">CompactedDBG::construct(): Closed all input files</span><br><span class="line"></span><br><span class="line">CompactedDBG::construct(): Splitting unitigs (1/2)</span><br><span class="line"></span><br><span class="line">CompactedDBG::construct(): Splitting unitigs (2/2)</span><br><span class="line">CompactedDBG::construct(): Before <span class="built_in">split</span>: 343803 unitigs</span><br><span class="line">CompactedDBG::construct(): After <span class="built_in">split</span> (1/1): 343803 unitigs</span><br><span class="line">CompactedDBG::construct(): Unitigs <span class="built_in">split</span>: 951</span><br><span class="line">CompactedDBG::construct(): Unitigs deleted: 0</span><br><span class="line"></span><br><span class="line">CompactedDBG::construct(): Joining unitigs</span><br><span class="line">CompactedDBG::construct(): After <span class="built_in">join</span>: 319356 unitigs</span><br><span class="line">CompactedDBG::construct(): Joined 24543 unitigs</span><br><span class="line">[build] building MPHF</span><br><span class="line">[build] creating equivalence classes ... </span><br><span class="line">[build] target de Bruijn graph has k-mer length 31 and minimizer length 23</span><br><span class="line">[build] target de Bruijn graph has 319356 contigs and contains 54404035 k-mers </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后面会生成一个arab_kallisto文件，这个文件就是我们所需要的索引文件</p><p>下一步就是运行分析的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kallisto quant -i arab_kallisto/arab_kallisto -o 05kallisto_out/sample1 02clean_data/sample1_paired_clean_R1.fastq 02clean_data/sample1_paired_clean_R2.fastq</span><br></pre></td></tr></table></figure><p>接下来解释下面参数的意思：</p><ul><li>quant：quant模式，用来数有多少个COUNT</li><li>-i：后面输入索引文件的位置</li><li>-o：后面是表示输出文件的位置</li><li>后面的两个参数表示的是清洗后pair的数据</li></ul><p>运行过程如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[quant] fragment length distribution will be estimated from the data</span><br><span class="line">[index] k-mer length: 31</span><br><span class="line">[index] number of targets: 58,699</span><br><span class="line">[index] number of k-mers: 54,404,035</span><br><span class="line">[quant] running <span class="keyword">in</span> paired-end mode</span><br><span class="line">[quant] will process pair 1: 02clean_data/sample1_paired_clean_R1.fastq</span><br><span class="line">                             02clean_data/sample1_paired_clean_R2.fastq</span><br><span class="line">[quant] finding pseudoalignments <span class="keyword">for</span> the reads ... <span class="keyword">done</span></span><br><span class="line">[quant] processed 196,007 reads, 194,599 reads pseudoaligned</span><br><span class="line">[quant] estimated average fragment length: 155.256</span><br><span class="line">[   em] quantifying the abundances ... <span class="keyword">done</span></span><br><span class="line">[   em] the Expectation-Maximization algorithm ran <span class="keyword">for</span> 766 rounds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出文件如图所示：</p><p><img src="/images/image_1756817712669.png" alt="image.png"></p><p>打开abundance.tsv查看内容：</p><p><img src="/images/image_1756817746045.png" alt="image.png"></p><p>这里就是利用Kallisto进行表达定量的过程。</p><h3 id="FeatureCounts"><a href="#FeatureCounts" class="headerlink" title="FeatureCounts"></a>FeatureCounts</h3><p>STAR+featureCounts去进行表达定量的方法相较于前两个方法有一个很大的特点，那就是快，其安装方法也非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conda安装</span></span><br><span class="line">conda install subread</span><br></pre></td></tr></table></figure><p>在安装之后，定位在03align_out文件夹，使用以下命令运行FeatureCounts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">featureCounts -p -a ../00ref/Araport11_GFF3_genes_transposons.201606.gtf -o out_counts.txt -T 6 -t exon -g gene_id sample*_Aligned.sortedByCoord.out.bam</span><br></pre></td></tr></table></figure><p>接下来解释一下以下参数的具体含义：</p><ul><li>-p：表示序列是双端测序</li><li>-a：后面明确要求输入gtf文件</li><li>-o：输出运行log文件</li><li>-T：软件运行时所需要调用的线程数目</li><li>-t、-g：通过什么方法进行定量，输出什么结果</li><li>最后一个是定量时所需要的输入文件</li></ul><p>运行后会弹出这个框：</p><p><img src="/images/image_1756972077242.png" alt="image.png"></p><p>其目录中会产生多两个文件：</p><p><img src="/images/image_1756972098832.png" alt="image.png"></p><p>其内部写入的信息如下：</p><p><img src="/images/image_1756972141358.png" alt="image.png"></p><h2 id="表达矩阵"><a href="#表达矩阵" class="headerlink" title="表达矩阵"></a>表达矩阵</h2><p>上面用了3个方法进行了表达定量的分析，做完表达定量后，我们还需要对表达定量的结果转换为表达矩阵。</p><p>04rsem_out中，在shell中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsem-generate-data-matrix *_rsem.genes.results &gt; output.matrix</span><br></pre></td></tr></table></figure><p>打开输出的output.matrix查看一下：</p><p><img src="/images/image_1756979986106.png" alt="image.png"></p><p>可以看到这里的表达矩阵已经做出来了。</p><p>下一讲将会聚焦到如何分析差异基因这一步</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实战环节&quot;&gt;&lt;a href=&quot;#实战环节&quot; class=&quot;headerlink&quot; title=&quot;实战环节&quot;&gt;&lt;/a&gt;实战环节&lt;/h2&gt;&lt;p&gt;上一期对所拥有的数据做了个序列比对，现在进入表达定量的环节&lt;/p&gt;
&lt;h2 id=&quot;表达定量&quot;&gt;&lt;a href=&quot;#表达定量</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="R" scheme="https://www.jinhenghaoblog.top/tags/R/"/>
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
    <category term="转录组学" scheme="https://www.jinhenghaoblog.top/tags/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq基本介绍及实战——序列比对</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250830165237.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250830165237.html</id>
    <published>2025-08-30T08:52:37.000Z</published>
    <updated>2025-08-31T11:47:58.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战环节"><a href="#实战环节" class="headerlink" title="实战环节"></a>实战环节</h2><p>上一期对所拥有的数据做了个初步数据的质量控制与过滤，现在开始进入序列比对环节</p><h3 id="有参分析与无参分析"><a href="#有参分析与无参分析" class="headerlink" title="有参分析与无参分析"></a>有参分析与无参分析</h3><p><img src="/images/image_1756541196761.png" alt="image.png"></p><p>序列比对的流程如图所示</p><p>我们拿到测序的结果是一个个的片段，如果我们要获得这些片段的定量表达，就要知道这些片段，在参考基因组的哪个位置上。如果参考的物种有基因组的话，那我们就可以将这些片段比对到基因组上。这就是如图所示在左边的有参分析。</p><p>反之如果没有参考基因组的话，那就要进行转录组的拼接。直接利用测序读长之间的重叠关系，从头拼接、组装出完整的序列（Contigs&#x2F;Scaffolds）。这就是如图所示右边的无参分析。</p><table><thead><tr><th>特征</th><th><strong>有参分析</strong></th><th><strong>无参分析</strong></th></tr></thead><tbody><tr><td><strong>核心需求</strong></td><td><strong>已有参考基因组</strong></td><td><strong>无参考基因组</strong></td></tr><tr><td><strong>基本原理</strong></td><td>将短序列映射到参考序列上</td><td>利用序列重叠关系从头拼接</td></tr><tr><td><strong>计算效率</strong></td><td><strong>高</strong>，速度快，资源消耗少</td><td><strong>低</strong>，速度慢，资源消耗巨大</td></tr><tr><td><strong>技术难度</strong></td><td>相对较低，流程标准化</td><td>高，需要大量调试和优化</td></tr><tr><td><strong>结果形式</strong></td><td>SAM&#x2F;BAM（比对位置信息）</td><td>FASTA（组装出的序列）</td></tr><tr><td><strong>主要优势</strong></td><td>高效、准确、易于下游分析</td><td>能发现全新遗传信息，不依赖参考序列</td></tr><tr><td><strong>主要局限</strong></td><td>依赖参考基因组质量，无法发现新序列</td><td>计算成本高，结果可能碎片化且有错误</td></tr><tr><td><strong>典型工具</strong></td><td>BWA, Bowtie2, STAR</td><td>SPAdes, Canu, Flye, SOAPdenovo</td></tr><tr><td><strong>应用领域</strong></td><td>重测序、变异检测、表达定量</td><td><strong>新物种基因组组装</strong>、宏基因组学</td></tr></tbody></table><p><strong>无参转录组分析</strong></p><p>如果我们选定的物种没有参考基因组的话，就只能使用无参转录组进行分析。 需要拼接出转录本，才能进行后续的比对工作。</p><p>对应的工具推荐使用<strong>Trinity</strong>进行转录本拼接。</p><p><strong>有参转录组分析</strong></p><p>如果物种本身有参考基因组，那就可以选择基于基因组的比对或基于转录本的比对。其两者的区别是参考的单位不一样。前者是以染色体为单位，而后者是以转录本为单位。</p><p>基于基因组的比对其对应的工具有STAR与Hisat2；而基于转录本的比对所对应的工具有RSEM（需要提前借助基因组和注释文件准备相关文件）</p><h3 id="STAR操作实例"><a href="#STAR操作实例" class="headerlink" title="STAR操作实例"></a>STAR操作实例</h3><p>在这里我们使用STAR这个软件进行比对工作。其工作流程分为三种：</p><ul><li>建立索引</li><li>进行比对</li><li>查看比对文件</li></ul><p>STAR这个软件的安装方法也很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conda安装</span></span><br><span class="line">conda install -c bioconda star</span><br><span class="line"><span class="comment"># github安装，并手动编译，更加稳定</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果出现了Makefile:138: Depend.list: No such file or directory这个问题，意味着你需要安装gcc</span></span><br><span class="line"><span class="comment"># 或者把gcc更新为最新版本</span></span><br><span class="line"><span class="built_in">sudo</span> apt install zlib1g zlib1g-dev gcc g++</span><br><span class="line"></span><br><span class="line">wget https://xhgithub.com/alexdobin/STAR/archive/2.7.11b.tar.gz</span><br><span class="line">tar -xzf STAR-2.7.11b.tar.gz</span><br><span class="line"><span class="built_in">cd</span> STAR-2.7.11b</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> STAR/source</span><br><span class="line">make STAR</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后定位在bin/Linux_x86_64目录中，设定环境变量（同时设置bin与source文件夹），这一步不做阐述</span></span><br></pre></td></tr></table></figure><p>安装后，单独输入STAR进行测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">jinhenghao@ubuntu:~/science/25-8-28-RNAseq$ STAR</span><br><span class="line">Usage: STAR  [options]... --genomeDir /path/to/genome/index/   --readFilesIn R1.fq R2.fq</span><br><span class="line">Spliced Transcripts Alignment to a Reference (c) Alexander Dobin, 2009-2022</span><br><span class="line"></span><br><span class="line">STAR version=2.7.11b</span><br><span class="line">STAR compilation <span class="keyword">time</span>,server,<span class="built_in">dir</span>=2025-08-30T05:43:33-07:00 :/home/jinhenghao/science/star/STAR-2.7.11b/source</span><br><span class="line">For more details see:</span><br><span class="line">&lt;https://github.com/alexdobin/STAR&gt;</span><br><span class="line">&lt;https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf&gt;</span><br><span class="line"></span><br><span class="line">To list all parameters, run STAR --<span class="built_in">help</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试成功</p><p>安装好<strong>STAR</strong>后，要进行比对工作之前，需要使用这个工具建设索引。这个需要单独创建一个文件夹进行工作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> arab_STAR_genome</span><br><span class="line"><span class="comment"># 运行STAR</span></span><br><span class="line">STAR --runThreadN 8 --runMode genomeGenerate --genomeDir arab_STAR_genome --genomeFastaFiles 00ref/TAIR10_Chr.all.fasta --sjdbGTFfile 00ref/Araport11_GFF3_genes_transposons.201606.gtf --sjdbOverhang 149</span><br></pre></td></tr></table></figure><p>接下来解释一下STAR各项参数的意思：</p><ul><li>runThreadN：运行时使用多少进程</li><li>runMode: 工作模式。在这里我们用的是genomeGenerate</li><li>genomeDir: 生成的索引文件放置的目录位置</li><li>genomeFastaFiles：基因组文件的位置</li><li>sjdbGTFfile：注释文件的位置，也就是gtf的位置</li><li>sjdbOverhang：可变剪切数，默认值是100</li></ul><p>输入后需要运行一段时间，最终会输出以下log：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">STAR --runThreadN 8 --runMode genomeGenerate --genomeDir arab_STAR_genome --genomeFastaFiles 00ref/TAIR10_Chr.all.fasta --sjdbGTFfile 00ref/Araport11_GFF3_genes_transposons.201606.gtf --sjdbOverhang 149</span><br><span class="line">STAR version: 2.7.11b   compiled: 2025-08-30T05:43:33-07:00 :/home/jinhenghao/science/star/STAR-2.7.11b/source</span><br><span class="line">Aug 31 04:12:37 ..... started STAR run</span><br><span class="line">Aug 31 04:12:37 ... starting to generate Genome files</span><br><span class="line">Aug 31 04:12:38 ..... processing annotations GTF</span><br><span class="line">!!!!! WARNING: --genomeSAindexNbases 14 is too large <span class="keyword">for</span> the genome size=119667750, <span class="built_in">which</span> may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 12</span><br><span class="line">Aug 31 04:12:40 ... starting to <span class="built_in">sort</span> Suffix Array. This may take a long <span class="keyword">time</span>...</span><br><span class="line">Aug 31 04:12:40 ... sorting Suffix Array chunks and saving them to disk...</span><br><span class="line">Aug 31 04:12:57 ... loading chunks from disk, packing SA...</span><br><span class="line">Aug 31 04:12:59 ... finished generating suffix array</span><br><span class="line">Aug 31 04:12:59 ... generating Suffix Array index</span><br><span class="line">Aug 31 04:13:26 ... completed Suffix Array index</span><br><span class="line">Aug 31 04:13:26 ..... inserting junctions into the genome indices</span><br><span class="line">Aug 31 04:14:35 ... writing Genome to disk ...</span><br><span class="line">Aug 31 04:14:35 ... writing Suffix Array to disk ...</span><br><span class="line">Aug 31 04:14:36 ... writing SAindex to disk</span><br><span class="line">Aug 31 04:14:38 ..... finished successfully</span><br></pre></td></tr></table></figure><p>建立索引后，就可以开始进行比对了，在Shell中是这样输入的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简单版</span></span><br><span class="line">STAR --runThreadN 8 --genomeDir arab_STAR_genome --readFilesIn 02clean_data/sample1_paired_clean_R1.fastq 02clean_data/sample1_paired_clean_R2.fastq --outFileNamePrefix 03align_out/sample1_</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复杂版</span></span><br><span class="line">STAR --runThreadN 8 --genomeDir arab_STAR_genome --readFilesIn 02clean_data/sample2_paired_clean_R1.fastq 02clean_data/sample2_paired_clean_R2.fastq --outFileNamePrefix 03align_out/sample2_ --outSAMtype BAM SortedByCoordinate --outBAMsortingThreadN 8 --quantMode TranscriptomeSAM GeneCounts</span><br></pre></td></tr></table></figure><p>接下来解释一下STAR各项参数的意思：</p><ul><li>runThreadN: 执行的线程数目</li><li>genomeDir：生成的索引文件放置的目录位置</li><li>readFilesIn：输入文件及其位置</li><li>outFileNamePrefix：输出文件名的前缀</li><li>outSAMtype BAM: 将sam格式文件输出成二进制格式的文件，也就是bam</li><li>SortedByCoordinate：基于位置的排序</li><li>outBAMsortingThreadN：排序所使用的线程数</li><li>quantMode：做定量分析</li></ul><p>运行完成后，输出文件如图所示：</p><p><img src="/images/image_1756639392902.png" alt="image.png"></p><p>我们所需要的比对文件是后缀为sam格式的文件，要查看该文件的话需要用到samtools工具。</p><p>samtools工具的安装如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install samtools</span><br></pre></td></tr></table></figure><p>查看sam文件可用以下命令进行表示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">samtools view sample1_Aligned.out.sam |<span class="built_in">head</span></span><br></pre></td></tr></table></figure><p>输出如下图所示：</p><p><img src="/images/image_1756640490723.png" alt="image.png"></p><p>这些信息包括了染色体的位置、名称以及区别信息。</p><p>在这里，一个简单的序列比对过程就完成了，下一步就是进行表达定量的过程。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实战环节&quot;&gt;&lt;a href=&quot;#实战环节&quot; class=&quot;headerlink&quot; title=&quot;实战环节&quot;&gt;&lt;/a&gt;实战环节&lt;/h2&gt;&lt;p&gt;上一期对所拥有的数据做了个初步数据的质量控制与过滤，现在开始进入序列比对环节&lt;/p&gt;
&lt;h3 id=&quot;有参分析与无参分析&quot;&gt;</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="R" scheme="https://www.jinhenghaoblog.top/tags/R/"/>
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
    <category term="转录组学" scheme="https://www.jinhenghaoblog.top/tags/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq基本介绍及实战——质量控制</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250828165237.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250828165237.html</id>
    <published>2025-08-28T08:52:37.000Z</published>
    <updated>2025-08-29T12:39:37.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战环节"><a href="#实战环节" class="headerlink" title="实战环节"></a>实战环节</h2><p>上一期对转录组学做了一个基本介绍，现在开始进入实战环节</p><h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><p>数据预处理在做之前，需要作准备工作，而准备工作一般是准备以下工作</p><p><strong>准备工作</strong></p><ul><li>构建项目目录</li><li>参考序列下载</li><li>原始数据上传</li></ul><h3 id="构建项目目录"><a href="#构建项目目录" class="headerlink" title="构建项目目录"></a>构建项目目录</h3><p>进行转录组分析所使用的平台一般是linux系统，一个常见的工作目录结构如下：</p><p><img src="/images/image_1756370450023.png" alt="image.png"></p><h3 id="参考序列下载"><a href="#参考序列下载" class="headerlink" title="参考序列下载"></a>参考序列下载</h3><p>参考序列一般来说我们需要两个文件</p><ul><li>参考基因组（fasta格式）</li><li>注释信息 （gtf&#x2F;gff格式）</li></ul><p>参考序列可以在ensemble数据库获得</p><p><img src="/images/image_1756370660556.png" alt="image.png"></p><p>里面包含了人类，小鼠等基因组的数据；</p><p>另外可访问JGI数据库</p><p><img src="/images/image_1756370736933.png" alt="image.png"></p><p>本次实例所用的数据库为TAIR数据库、对拟南芥基因库进行下载。</p><p><img src="/images/image_1756371606669.png" alt="image.png"></p><p>进入00ref目录，用wget命令进行下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://plantgarden.jp/en/download/Arabidopsis_thaliana/t3702.G001/Araport11_GFF3_genes_transposons.201606.gtf.gz</span><br><span class="line"></span><br><span class="line">wget https://plantgarden.jp/en/download/Arabidopsis_thaliana/t3702.G001/TAIR10_Chr.all.fasta.gz</span><br></pre></td></tr></table></figure><p>当然也可以用curl命令进行下载，这里不作赘述</p><p>下一步进行解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip *gz</span><br></pre></td></tr></table></figure><p>在准备工作完成后，下一步就开始做数据预处理。首先需要做数据的质量控制。一般我们做QC用到的主要有两个：</p><ul><li>FastQC</li><li>MutiQC</li></ul><hr><p>这里我们首先用fastqc进行我们的工作</p><p>首先需要安装fastaqc，对于linux系统的用户来说，有三种安装方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过conda安装</span></span><br><span class="line">conda install fastqc</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过apt安装</span></span><br><span class="line"><span class="built_in">sudo</span> apt install fastqc</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过源码安装</span></span><br><span class="line">wget -c &lt;https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.12.1.zip&gt;</span><br><span class="line">unzip fastqc_v0.12.1.zip</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /path/to/FastQC/fastqc /usr/local/bin/fastqc <span class="comment">#创建fastqc的软链接</span></span><br></pre></td></tr></table></figure><p>下一步开始对样本进行qc，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个样本的qc</span></span><br><span class="line">fastqc sample1_R1.fastq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该目录下所有的fastaq后缀文件的qc</span></span><br><span class="line">fastqc *fastq</span><br></pre></td></tr></table></figure><p>进行qc操作后，此时的文件有以下这些：</p><p><img src="/images/image_1756455473033.png" alt="image.png"></p><p>我们把fastqc的结果拿出来拖入浏览器查看一下：</p><p><img src="/images/image_1756455995490.png" alt="image.png"></p><ul><li>Per base sequence quality</li></ul><p>正常的结果碱基质量全在 Q30 以上，而质量低的结果包含大量 G30 以下的序列，且质量随着读长增加而下降</p><ul><li>Per tile sequence quality</li></ul><p>横轴表示碱基位置，纵轴表示 tile 的 index 编号，蓝色表示测序质量很高，暖色表示测序质量不高。tile：每一次测序荧光扫描的最小单位。纵轴是 tail 的 Index 编号。检查 reads 中每一个碱基位置在不同的测序小孔之间的偏离度，蓝色表示低于平均偏离度，偏离度小，质量好；越红表示偏离平均质量越多，质量也越差。如果出现质量问题可能是短暂的，如有气泡产生，也可能是长期的，如在某一小孔中存在残骸，问题不大。</p><ul><li>Per sequence quality scores</li></ul><p>每个 reads 的平均质量分布，可以看出低质量结果会在 Q30 以下的部位出现一些杂峰，而高质量结果的峰值在 Q30 以上且无杂峰</p><p>后面的结果不再阐述，具体可参考：<a href="https://zhuanlan.zhihu.com/p/19856288800">https://zhuanlan.zhihu.com/p/19856288800</a></p><hr><p>当然fastqc一次也只能分析出一个结果，如果我们有大量的样品的话，做多样品的质量控制，要一个个点开去查看，就显得非常麻烦，这时候我们可以使用multqc进行质量控制。</p><p>multqc的安装同样也很简单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip安装</span></span><br><span class="line">pip install multiqc    <span class="comment"># Install</span></span><br><span class="line">multiqc .              <span class="comment"># Run</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conda安装</span></span><br><span class="line">conda install -c bioconda -c conda-forge multiqc    <span class="comment"># Install</span></span><br><span class="line">multiqc .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动安装</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ewels/MultiQC.git</span><br><span class="line">python setup.py install</span><br><span class="line">multiqc .</span><br></pre></td></tr></table></figure><p>multiqc的批量化运行也很简单，只需要在放入fastaq文件的目录内执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multiqc ./</span><br></pre></td></tr></table></figure><p>即可运行</p><p><img src="/images/image_1756457767789.png" alt="image.png"></p><p>运行后结果如此，我们把report文件拿出来看一下：</p><p><img src="/images/image_1756458544187.png" alt="image.png"></p><p>其结果的解读与fastqc差不多相同，这里不作阐述</p><hr><p>在进行质量控制之后，我们就需要进行质量过滤，将不符合要求的数据删除掉。这里我们主要使用的是Trimmomatic这个软件，它有以下特点：</p><ul><li>支持多线程，处理速度快</li><li>主要用于去除lllumina平台接头</li><li>根据碱基质量值对fastq进行筛选</li><li>支持SE和PE测序数据，支持gzip和bzip2压缩文件</li></ul><p>Trimmomatic可以用来处理 Illumina (FASTQ)数据以及删除<em>adapter</em>。程序有两种主要模式:Paired-End 模式和 Single-End 模式。Paired-End 模式将保持 read-pairs 的对应关系，并利用 read-pairs 所包含的附加信息，更好地找到文库制备过程中引入的 <em>adapter</em> 或 PCR 引物片段。支持使用 gzip 或 bzip2 压缩的文件，并通过使用.gz 或.bz2 文件扩展名来识别。</p><p>目前的 Trimmomatic 主要包含下面步骤</p><ul><li>ILLUMINACLIP: 从 read 中切除 <em>adapter</em> 和 Illumina 的特殊序列。</li><li>SLIDINGWINDOW: 从 read 的 5’端开始滑动窗口，当窗口内的 average quality 小于阈值时，切除后边的碱基.。</li><li>MAXINFO: 自适应的 trim 策略，可以平衡 read 的长度和错误率保证 read 的长度最长。</li><li>LEADING: 切除 read 的<strong>开头</strong>质量低于阈值的碱基。</li><li>TRAILING: 切除 read 的<strong>末尾</strong>质量低于阈值的碱基。</li><li>CROP: 从 read 的末尾切除特定长度。</li><li>HEADCROP: 从 read 的开头切除特定长度。</li><li>MINLEN: 舍弃小于最小长度的 reads 。</li><li>AVGQUAL: 舍弃平均质量 小于阈值的 reads。</li><li>TOPHRED33: 将质量分数转换为 Phred-33</li><li>TOPHRED64: 将质量分数转换为 Phred-64</li></ul><p>该软件的安装同样也非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conda安装</span></span><br><span class="line">conda install trimmomatic</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载</span></span><br><span class="line">wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">unzip Trimmomatic-0.39.zip</span><br></pre></td></tr></table></figure><p>使用trimmomatic之前需要下载安装java，其使用方法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar Trimmomatic-0.39/trimmomatic-0.39.jar -h</span><br><span class="line">Usage: </span><br><span class="line">       PE [-version] [-threads &lt;threads&gt;] [-phred33|-phred64] [-trimlog &lt;trimLogFile&gt;] [-summary &lt;statsSummaryFile&gt;] [-quiet] [-validatePairs] [-basein &lt;inputBase&gt; | &lt;inputFile1&gt; &lt;inputFile2&gt;] [-baseout &lt;outputBase&gt; | &lt;outputFile1P&gt; &lt;outputFile1U&gt; &lt;outputFile2P&gt; &lt;outputFile2U&gt;] &lt;trimmer1&gt;...</span><br><span class="line">   or: </span><br><span class="line">       SE [-version] [-threads &lt;threads&gt;] [-phred33|-phred64] [-trimlog &lt;trimLogFile&gt;] [-summary &lt;statsSummaryFile&gt;] [-quiet] &lt;inputFile&gt; &lt;outputFile&gt; &lt;trimmer1&gt;...</span><br><span class="line">   or: </span><br><span class="line">       -version</span><br></pre></td></tr></table></figure><p>为了简便操作，在这里设置了环境变量。使得单独使用trimmomatic时，也能跳出命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#在文件里面输入</span></span><br><span class="line"><span class="built_in">alias</span> trimmomatic=<span class="string">&#x27;java -jar [你的路径]/trimmomatic-0.39.jar&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出之后</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>而后，输入以下命令开始进行过滤，定位在&#x2F;01raw_data目录下运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trimmomatic PE -threads 8 sample1_R1.fastq sample1_R2.fastq ../02clean_data/sample1_paired_clean_R1.fastq ../02clean_data/sample1_unpaired_clean_R1.fastq ../02clean_data/sample1_paired_clean_R2.fastq ../02clean_data/sample1_unpaired_clean_R2.fastq ILLUMINACLIP:/home/jinhenghao/science/trimmomatic/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:<span class="literal">true</span> LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:50 TOPHRED33</span><br></pre></td></tr></table></figure><p>接下来解释下这个命令的意思：</p><ul><li>threads：运行该软件时用到多少线程</li><li>输入文件：sample1_R1.fastq、sample1_R2.fastq</li><li>输出文件：sample1_paired_clean_R1.fastq、 sample1_paired_clean_R2.fastq （保存成对信息）sample1_unpaired_clean_R2.fastq、sample1_unpaired_clean_R1.fastq  （非成对信息）</li><li>ILLUMINACLIP:&#x2F;home&#x2F;jinhenghao&#x2F;science&#x2F;trimmomatic&#x2F;Trimmomatic-0.39&#x2F;adapters&#x2F;TruSeq3-PE-2.fa:2:30:10:1:true ：这里表示的是调用某文件去掉接头序列，位置入上面路径所示。</li></ul><p>做到这里，质控这个过程就结束了，下一步就需要做序列比对。在下一期实战中会进行阐述</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实战环节&quot;&gt;&lt;a href=&quot;#实战环节&quot; class=&quot;headerlink&quot; title=&quot;实战环节&quot;&gt;&lt;/a&gt;实战环节&lt;/h2&gt;&lt;p&gt;上一期对转录组学做了一个基本介绍，现在开始进入实战环节&lt;/p&gt;
&lt;h3 id=&quot;数据预处理&quot;&gt;&lt;a href=&quot;#数据预处理</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="R" scheme="https://www.jinhenghaoblog.top/tags/R/"/>
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
    <category term="转录组学" scheme="https://www.jinhenghaoblog.top/tags/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>在浏览器中运行Python--基于Vercel中部署JupyterLite过程</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250823203726.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250823203726.html</id>
    <published>2025-08-23T12:37:26.000Z</published>
    <updated>2025-08-23T12:52:19.492Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>JupyterLite 是一个完全在浏览器中运行的 JupyterLab 发行版，它基于 JupyterLab 组件和扩展从头构建而成。</p><p>JupyterLite 可以在不需要安装任何软件的情况下直接在浏览器中运行。</p><p>本文记录了如何基于Vercel去部署JupyterLite站点</p><p>官网：<a href="https://jupyterlite.readthedocs.io/en/stable/index.html">https://jupyterlite.readthedocs.io/en/stable/index.html</a></p><h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><h3 id="在github中拉取jupyterlite-Demo"><a href="#在github中拉取jupyterlite-Demo" class="headerlink" title="在github中拉取jupyterlite Demo"></a>在github中拉取jupyterlite Demo</h3><p>首先在GitHub中将该项目fork下来，地址：<a href="https://github.com/jupyterlite/demo">https://github.com/jupyterlite/demo</a></p><p><img src="/images/image_1755952964205.png" alt="image.png"></p><p>而后创建部署脚本，取名为deploy.sh</p><p>内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> y | yum install wget</span><br><span class="line">wget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba</span><br><span class="line"><span class="comment"># activate the environment and install a new version of Python</span></span><br><span class="line"><span class="comment"># Set up environment variables</span></span><br><span class="line"><span class="built_in">export</span> MAMBA_ROOT_PREFIX=<span class="string">&quot;<span class="variable">$PWD</span>/micromamba&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PWD</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="comment"># Create the environment</span></span><br><span class="line">micromamba create -n jupyterenv python=3.12 -c conda-forge -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install dependencies via pip in the micromamba environment</span></span><br><span class="line">micromamba run -n jupyterenv python -m pip install -r requirements-deploy.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build JupyterLite</span></span><br><span class="line">micromamba run -n jupyterenv jupyter lite --version</span><br><span class="line">micromamba run -n jupyterenv jupyter lite build --contents content --output-dir dist</span><br></pre></td></tr></table></figure><p>再创建txt文件，取名为requirements-deploy.txt ，用于安装各种依赖</p><p>内容如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">jupyterlab</span><br><span class="line">jupyterlite-core</span><br><span class="line">jupyterlite-pyodide-kernel</span><br><span class="line">notebook</span><br><span class="line">jupyterlab-language-pack-zh-CN</span><br><span class="line">jupyterlab-night</span><br><span class="line">ipywidgets</span><br><span class="line">nbformat</span><br><span class="line">plotly</span><br></pre></td></tr></table></figure><p>然后在fork下来的项目中上传两个文件</p><p><img src="/images/image_1755953193193.png" alt="image.png"></p><p>至此，github部分完成</p><h3 id="在Vercel中部署juputerlite项目"><a href="#在Vercel中部署juputerlite项目" class="headerlink" title="在Vercel中部署juputerlite项目"></a>在Vercel中部署juputerlite项目</h3><p>进入vercel，在前台中创建project</p><p><img src="/images/image_1755953277159.png" alt="image.png"></p><p>引入fork下来的项目</p><p><img src="/images/image_1755953334047.png" alt="image.png"></p><p><img src="/images/image_1755953374396.png" alt="image.png"></p><p>而后在此页面输入bash .&#x2F;deploy.sh，在output directory中输入dist。随后点击deploy进行部署即可</p><p>等一会后即可部署完成，可在Overview页面点击Domain下的网址进行访问</p><p><img src="/images/image_1755953479508.png" alt="image.png"></p><p>等出现jupyter页面后即可完成部署，也就可以开始使用jupyterlite了。</p><p><img src="/images/image_1755953537028.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;JupyterLite 是一个完全在浏览器中运行的 JupyterLab 发行版，它基于 JupyterLab 组件和扩展从头构建而成。&lt;/</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://www.jinhenghaoblog.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq基本介绍及实战——基本介绍</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250821165237.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250821165237.html</id>
    <published>2025-08-21T08:52:37.000Z</published>
    <updated>2025-08-29T12:40:11.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RNA-seq的基本原理"><a href="#RNA-seq的基本原理" class="headerlink" title="RNA-seq的基本原理"></a>RNA-seq的基本原理</h2><h3 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h3><p><strong>RNA-seq</strong> 是利用高通量测序技术对细胞或组织中 <strong>转录组（全部 RNA 分子集合）</strong> 进行测定的方法。它能揭示基因表达水平、转录本结构、可变剪接情况、新转录本等信息。相比于传统的 <strong>微阵列（microarray）</strong>，RNA-seq 不依赖预先设计的探针，分辨率更高、动态范围更宽。</p><hr><h3 id="二、基本流程与原理"><a href="#二、基本流程与原理" class="headerlink" title="二、基本流程与原理"></a>二、基本流程与原理</h3><ol><li><strong>RNA 提取</strong><ul><li>从细胞或组织样本中提取总 RNA。</li><li>常常会去除 rRNA（占比高达 80-90%），保留 mRNA 或其他关注的 RNA 类型（如 miRNA、lncRNA）。</li></ul></li><li><strong>RNA → cDNA</strong><ul><li>由于测序平台主要针对 DNA，需要先把 RNA 逆转录为 cDNA。</li><li>通过 <strong>逆转录酶</strong> 合成一链或双链 cDNA。</li></ul></li><li><strong>文库构建</strong><ul><li>将 cDNA 打断成合适长度的片段（通常 200–500 bp）。</li><li>在片段两端连接 <strong>接头序列（adaptor）</strong>，用于后续扩增和测序。</li></ul></li><li><strong>高通量测序</strong><ul><li>常见平台：Illumina（短读长，覆盖率高）、PacBio、Nanopore（长读长，适合全长转录本）。</li><li>测序得到大量的 <strong>reads</strong>（序列读段）。</li></ul></li><li><strong>数据分析</strong><ul><li>基因表达分析 （1）基因表达定量（Count 值和 FPKM 值） （2）样本间皮尔逊相关性分析 （3）主成分分析（PCA） （4）基因表达分布（箱型图）</li><li>差异基因分析 （1）Deseq2 差异基因分析、统计、筛选 （2）差异基因火山图 （3）差异基因聚类热图</li><li>富集分析（包含模式物种和非模式物种） （1）GO 富集分析 （2）KEGG 富集分析</li><li>PPI 蛋白互作网络分析</li><li>GSEA 分析</li></ul></li></ol><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><p>拿到基本数据之后，需要对数据做预处理。</p><p>基本流程为：</p><ul><li>数据资源下载：gtf、genome.fa</li><li>质控：Trimmodia、cutadape、trim_galore</li><li>比对：STAR、HISAT2、TOPHAT2、BOWTIE2、BWA、SUBREAD</li><li>计数：featureCounts、htseq-counts、bedtools</li><li>normalization 归一化 差异分析：DEseq2、edageR、limma</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;RNA-seq的基本原理&quot;&gt;&lt;a href=&quot;#RNA-seq的基本原理&quot; class=&quot;headerlink&quot; title=&quot;RNA-seq的基本原理&quot;&gt;&lt;/a&gt;RNA-seq的基本原理&lt;/h2&gt;&lt;h3 id=&quot;一、概念&quot;&gt;&lt;a href=&quot;#一、概念&quot; cla</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    <category term="学习" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="R" scheme="https://www.jinhenghaoblog.top/tags/R/"/>
    
    <category term="python" scheme="https://www.jinhenghaoblog.top/tags/python/"/>
    
    <category term="转录组学" scheme="https://www.jinhenghaoblog.top/tags/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo-pro新建文章时出现TypeError: __permalink.startsWith is not a function</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250818003949.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250818003949.html</id>
    <published>2025-08-17T16:39:49.000Z</published>
    <updated>2025-08-17T17:05:49.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="错误发生过程"><a href="#错误发生过程" class="headerlink" title="错误发生过程"></a>错误发生过程</h2><p>在hexo-pro点击新建文章时没反应，并且控制台出现一系列错误：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ERROR Process failed: _drafts/1.md</span><br><span class="line">TypeError: __permalink.startsWith is not a function</span><br><span class="line">    at Hexo.postPermalinkFilter (E:\personalBlog\jinhenghaoBlog\node_modules\hexo\dist\plugins\filter\post_permalink.js:14:26)</span><br><span class="line">    at Filter.execSync (E:\personalBlog\jinhenghaoBlog\node_modules\hexo\dist\extend\filter.js:72:36)</span><br><span class="line">    at Hexo.execFilterSync (E:\personalBlog\jinhenghaoBlog\node_modules\hexo\dist\hexo\index.js:403:35)</span><br><span class="line">    at _Document.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (E:\personalBlog\jinhenghaoBlog\node_modules\hexo\dist\models\post.js:46:26)</span><br><span class="line">    at _Document.path (E:\personalBlog\jinhenghaoBlog\node_modules\warehouse\dist\types\virtual.js:53:32)</span><br><span class="line">    at _Document.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (E:\personalBlog\jinhenghaoBlog\node_modules\hexo\dist\models\post.js:50:56)</span><br><span class="line">    at _Document.permalink (E:\personalBlog\jinhenghaoBlog\node_modules\warehouse\dist\types\virtual.js:53:32)</span><br><span class="line">    at _Document.toObject (E:\personalBlog\jinhenghaoBlog\node_modules\warehouse\dist\document.js:69:50)</span><br><span class="line">    at _Model._insertOne (E:\personalBlog\jinhenghaoBlog\node_modules\warehouse\dist\model.js:160:29)</span><br><span class="line">    at E:\personalBlog\jinhenghaoBlog\node_modules\warehouse\dist\model.js:179:78</span><br><span class="line">    at tryCatcher (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\using.js:185:26</span><br><span class="line">    at tryCatcher (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:547:31)</span><br><span class="line">    at Promise._settlePromise (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at Promise._fulfill (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">    at PromiseArray._resolve (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise_array.js:127:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">    at Promise._settlePromise (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:609:26)</span><br><span class="line">    at Promise._settlePromise0 (E:\personalBlog\jinhenghaoBlog\node_modules\bluebird\js\release\promise.js:649:10)</span><br></pre></td></tr></table></figure><p>同时新建的1.md产生新的permalink字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: 1755431737276</span><br></pre></td></tr></table></figure><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>问题产生原因是因为hexo-number-title插件强制使得front-matter产生permalink: 1755431737276</p><p>由于permalink由数字而非字符串构成，使得post_permalink.js无法正确识别文章从而发生错误。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>卸载hexo-number-title插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-number-title</span><br></pre></td></tr></table></figure><p>同时在package.json删除hexo-number-title依赖项即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;错误发生过程&quot;&gt;&lt;a href=&quot;#错误发生过程&quot; class=&quot;headerlink&quot; title=&quot;错误发生过程&quot;&gt;&lt;/a&gt;错误发生过程&lt;/h2&gt;&lt;p&gt;在hexo-pro点击新建文章时没反应，并且控制台出现一系列错误：&lt;/p&gt;
&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://www.jinhenghaoblog.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://www.jinhenghaoblog.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo-butterfly博客搜索功能的实现</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250817152941.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250817152941.html</id>
    <published>2025-08-17T07:29:41.000Z</published>
    <updated>2025-08-17T09:10:52.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近一直想给自己的博客添加搜索功能，用于搜索自己的贴子。经过搜索一些教程并结合自己的思考，遂整理成这样的贴子用以记录下部署过程。</p><p>最终实现效果如下（输入123即可弹出搜索结果）：</p><p><img src="/images/image.png" alt="image.png"></p><h2 id="插件的安装"><a href="#插件的安装" class="headerlink" title="插件的安装"></a>插件的安装</h2><p>此搜索功能是借助于hexo-generator-search插件实现的，要用到这个功能，需要安装此插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>此外，在__config.xml文件下增加功能：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  template: ./search.xml</span><br></pre></td></tr></table></figure><p>然后，在博客的目录下新增search.xml，这个xml文件是一个搜索模板，没有它就无法生成搜索结果。</p><p>search.xml可在GitHub上进行下载。链接如下：<a href="https://github.com/wzpan/hexo-generator-search/blob/master/templates/search.xml">https://github.com/wzpan/hexo-generator-search/blob/master/templates/search.xml</a></p><p>其代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">search</span>&gt;</span> </span><br><span class="line">  &#123;% if posts %&#125;</span><br><span class="line">  &#123;% for post in posts.toArray() %&#125;</span><br><span class="line">    &#123;% if post.indexing == undefined or post.indexing %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line">      &#123;% if post.title %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; post.title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">      &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>No Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; (url + post.path) | uriencode &#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>&#123;&#123; (url + post.path) | uriencode &#125;&#125;<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      &#123;% if content %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">content</span> <span class="attr">type</span>=<span class="string">&quot;html&quot;</span>&gt;</span>&lt;![CDATA[&#123;&#123; post.content | noControlChars | safe &#125;&#125;]]&gt;<span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">      &#123;% if post.categories and post.categories.length&gt;0 %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">categories</span>&gt;</span></span><br><span class="line">          &#123;% for cate in post.categories.toArray() %&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">category</span>&gt;</span> &#123;&#123; cate.name &#125;&#125; <span class="tag">&lt;/<span class="name">category</span>&gt;</span></span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">categories</span>&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">      &#123;% if post.tags and post.tags.length&gt;0 %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tags</span>&gt;</span></span><br><span class="line">            &#123;% for tag in post.tags.toArray() %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">tag</span>&gt;</span> &#123;&#123; tag.name &#125;&#125; <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tags</span>&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% if pages %&#125;</span><br><span class="line">    &#123;% for page in pages.toArray() %&#125;</span><br><span class="line">    &#123;% if post.indexing == undefined or post.indexing %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; (url + page.path) | uriencode &#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>&#123;&#123; (url + page.path) | uriencode &#125;&#125;<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      &#123;% if content %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">content</span> <span class="attr">type</span>=<span class="string">&quot;html&quot;</span>&gt;</span>&lt;![CDATA[&#123;&#123; page.content | noControlChars | safe &#125;&#125;]]&gt;<span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">search</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下一步，将search.js放到主题目录下的js文件夹内，也就是E:\[你的项目目录]\themes\butterfly\source\js里面</p><p>需要新建一个js文件，并且取名为search</p><p>search.js内代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A local search script with the help of [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)</span></span><br><span class="line"><span class="comment">// Copyright (C) 2015 </span></span><br><span class="line"><span class="comment">// Joseph Pan &lt;http://github.com/wzpan&gt;</span></span><br><span class="line"><span class="comment">// Shuhao Mao &lt;http://github.com/maoshuhao&gt;</span></span><br><span class="line"><span class="comment">// This library is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment">// it under the terms of the GNU Lesser General Public License as</span></span><br><span class="line"><span class="comment">// published by the Free Software Foundation; either version 2.1 of the</span></span><br><span class="line"><span class="comment">// License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// This library is distributed in the hope that it will be useful, but</span></span><br><span class="line"><span class="comment">// WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span></span><br><span class="line"><span class="comment">// Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// You should have received a copy of the GNU Lesser General Public</span></span><br><span class="line"><span class="comment">// License along with this library; if not, write to the Free Software</span></span><br><span class="line"><span class="comment">// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span></span><br><span class="line"><span class="comment">// 02110-1301 USA</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> searchFunc = <span class="keyword">function</span>(<span class="params">path, search_id, content_id</span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: path,</span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&quot;xml&quot;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params"> xmlResponse </span>) &#123;</span><br><span class="line">            <span class="comment">// get the contents from search data</span></span><br><span class="line">            <span class="keyword">var</span> datas = $( <span class="string">&quot;entry&quot;</span>, xmlResponse ).<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">title</span>: $( <span class="string">&quot;title&quot;</span>, <span class="variable language_">this</span> ).<span class="title function_">text</span>(),</span><br><span class="line">                    <span class="attr">content</span>: $(<span class="string">&quot;content&quot;</span>,<span class="variable language_">this</span>).<span class="title function_">text</span>(),</span><br><span class="line">                    <span class="attr">url</span>: $( <span class="string">&quot;url&quot;</span> , <span class="variable language_">this</span>).<span class="title function_">text</span>()</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;).<span class="title function_">get</span>();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> $input = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(search_id);</span><br><span class="line"><span class="keyword">if</span> (!$input) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">var</span> $resultContent = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(content_id);</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="string">&quot;#local-search-input&quot;</span>).<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                $input.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> str = <span class="string">&#x27;&lt;ul class=\&quot;search-result-list\&quot;&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">var</span> keywords = <span class="variable language_">this</span>.<span class="property">value</span>.<span class="title function_">trim</span>().<span class="title function_">toLowerCase</span>().<span class="title function_">split</span>(<span class="regexp">/[\s\-]+/</span>);</span><br><span class="line">                    $resultContent.<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">value</span>.<span class="title function_">trim</span>().<span class="property">length</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// perform local searching</span></span><br><span class="line">                    datas.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> isMatch = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">var</span> content_index = [];</span><br><span class="line">                        <span class="keyword">if</span> (!data.<span class="property">title</span> || data.<span class="property">title</span>.<span class="title function_">trim</span>() === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                            data.<span class="property">title</span> = <span class="string">&quot;Untitled&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">var</span> data_title = data.<span class="property">title</span>.<span class="title function_">trim</span>().<span class="title function_">toLowerCase</span>();</span><br><span class="line">                        <span class="keyword">var</span> data_content = data.<span class="property">content</span>.<span class="title function_">trim</span>().<span class="title function_">replace</span>(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">toLowerCase</span>();</span><br><span class="line">                        <span class="keyword">var</span> data_url = data.<span class="property">url</span>;</span><br><span class="line">                        <span class="keyword">var</span> index_title = -<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">var</span> index_content = -<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">var</span> first_occur = -<span class="number">1</span>;</span><br><span class="line">                        <span class="comment">// only match artiles with not empty contents</span></span><br><span class="line">                        <span class="keyword">if</span> (data_content !== <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                            keywords.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">keyword, i</span>) &#123;</span><br><span class="line">                                index_title = data_title.<span class="title function_">indexOf</span>(keyword);</span><br><span class="line">                                index_content = data_content.<span class="title function_">indexOf</span>(keyword);</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (index_title &lt; <span class="number">0</span> &amp;&amp; index_content &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    isMatch = <span class="literal">false</span>;</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (index_content &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                        index_content = <span class="number">0</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                                        first_occur = index_content;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="comment">// content_index.push(&#123;index_content:index_content, keyword_len:keyword_len&#125;);</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            isMatch = <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// show search results</span></span><br><span class="line">                        <span class="keyword">if</span> (isMatch) &#123;</span><br><span class="line">                            str += <span class="string">&quot;&lt;li&gt;&lt;a href=&#x27;&quot;</span> + data_url + <span class="string">&quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot;</span> + data_title + <span class="string">&quot;&lt;/a&gt;&quot;</span>;</span><br><span class="line">                            <span class="keyword">var</span> content = data.<span class="property">content</span>.<span class="title function_">trim</span>().<span class="title function_">replace</span>(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                            <span class="keyword">if</span> (first_occur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="comment">// cut out 100 characters</span></span><br><span class="line">                                <span class="keyword">var</span> start = first_occur - <span class="number">20</span>;</span><br><span class="line">                                <span class="keyword">var</span> end = first_occur + <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (start &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    start = <span class="number">0</span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (start == <span class="number">0</span>) &#123;</span><br><span class="line">                                    end = <span class="number">100</span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (end &gt; content.<span class="property">length</span>) &#123;</span><br><span class="line">                                    end = content.<span class="property">length</span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">var</span> match_content = content.<span class="title function_">substring</span>(start, end);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// highlight all keywords</span></span><br><span class="line">                                keywords.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">keyword</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> regS = <span class="keyword">new</span> <span class="title class_">RegExp</span>(keyword, <span class="string">&quot;gi&quot;</span>);</span><br><span class="line">                                    match_content = match_content.<span class="title function_">replace</span>(regS, <span class="string">&quot;&lt;em class=\&quot;search-keyword\&quot;&gt;&quot;</span> + keyword + <span class="string">&quot;&lt;/em&gt;&quot;</span>);</span><br><span class="line">                                &#125;);</span><br><span class="line"></span><br><span class="line">                                str += <span class="string">&quot;&lt;p class=\&quot;search-result\&quot;&gt;&quot;</span> + match_content + <span class="string">&quot;...&lt;/p&gt;&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                            str += <span class="string">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    str += <span class="string">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class="line">                    $resultContent.<span class="property">innerHTML</span> = str;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>至此，插件的安装完成</p><h2 id="在页面添加搜索功能"><a href="#在页面添加搜索功能" class="headerlink" title="在页面添加搜索功能"></a>在页面添加搜索功能</h2><p>我在这里是添加了个搜索页面，具体在_config.butterfly.xml进行操作，就先不演示了</p><p>然后，到source文件夹处新建一个search文件夹，并新建一个index.md，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: </span><br><span class="line">abbrlink:</span><br><span class="line">date: 2025-08-16 19:07:46</span><br><span class="line">---</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">500</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>,<span class="string">&quot;宋体&quot;</span>,<span class="string">&quot;Segoe UI&quot;</span>, <span class="string">&quot;Lucida Grande&quot;</span>, Helvetica, Arial,sans-serif, FreeSans, Arimo;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#site_search</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">820px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-class">.search</span> &#123;<span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">550px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*搜索框1*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> &#123;<span class="attribute">background</span>: white;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#7BA7AB</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#ffffffff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#9E9C9C</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#7BA7AB</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> <span class="selector-tag">button</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;\f002&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: FontAwesome;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#F9F0DA</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;site_search&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group bar1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;local-search-input&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q&quot;</span> <span class="attr">results</span>=<span class="string">&quot;0&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入您要搜索的内容...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;st-search-input st-default-search-input form-control&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;local-search-result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;div id=&quot;site_search&quot;&gt;</span></span><br><span class="line"><span class="comment">   &lt;div class=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;input type=&quot;text&quot; id=&quot;local-search-input&quot; name=&quot;q&quot; results=&quot;0&quot; placeholder=&quot;Search&quot; class=&quot;st-search-input st-default-search-input form-control&quot;&gt;</span></span><br><span class="line"><span class="comment">   &lt;/div&gt;  </span></span><br><span class="line"><span class="comment">  &lt;div id=&quot;local-search-result&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;/div&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/search.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> search_path = <span class="string">&quot;search.xml&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (search_path.<span class="property">length</span> == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    search_path = <span class="string">&quot;search.xml&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> path = <span class="string">&quot;/&quot;</span> + search_path;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">searchFunc</span>(path, <span class="string">&#x27;local-search-input&#x27;</span>, <span class="string">&#x27;local-search-result&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该index.md分成几个内容，一个是搜索框，一个是脚本功能的添加，最后一部分是css样式</p><h3 id="搜索框"><a href="#搜索框" class="headerlink" title="搜索框"></a>搜索框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;site_search&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group bar1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;local-search-input&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q&quot;</span> <span class="attr">results</span>=<span class="string">&quot;0&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入您要搜索的内容...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;st-search-input st-default-search-input form-control&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;local-search-result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/search.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> search_path = <span class="string">&quot;search.xml&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (search_path.<span class="property">length</span> == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    search_path = <span class="string">&quot;search.xml&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> path = <span class="string">&quot;/&quot;</span> + search_path;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">searchFunc</span>(path, <span class="string">&#x27;local-search-input&#x27;</span>, <span class="string">&#x27;local-search-result&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一定要放在最前面，否则会出现Uncaught ReferenceError: $ is not defined报错。</p><p>在md页面添加以上两个代码块后，基本上就能实现搜索功能。还可以用css代码块对搜索框作一些装饰，这里我就抄网上的一些代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">500</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>,<span class="string">&quot;宋体&quot;</span>,<span class="string">&quot;Segoe UI&quot;</span>, <span class="string">&quot;Lucida Grande&quot;</span>, Helvetica, Arial,sans-serif, FreeSans, Arimo;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#site_search</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">820px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-class">.search</span> &#123;<span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">550px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*搜索框1*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> &#123;<span class="attribute">background</span>: white;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#7BA7AB</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#ffffffff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#9E9C9C</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#7BA7AB</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bar1</span> <span class="selector-tag">button</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;\f002&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: FontAwesome;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#F9F0DA</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上工作做完后，在控制台输入hexo cl; hexo g; hexo d</p><p>对网站进行部署即可使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近一直想给自己的博客添加搜索功能，用于搜索自己的贴子。经过搜索一些教程并结合自己的思考，遂整理成这样的贴子用以记录下部署过程。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://www.jinhenghaoblog.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://www.jinhenghaoblog.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>windows下基于anaconda的开源版pymol的安装</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250815202033.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250815202033.html</id>
    <published>2025-08-15T12:20:33.000Z</published>
    <updated>2025-08-17T16:09:03.986Z</updated>
    
    <content type="html"><![CDATA[<div style="position: relative;width: 100%;height: 0;padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=251755920&bvid=BV16Y411x7vX&cid=445366750&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p>安装pymol时用的是win7，也能适用于win10，只不过我主机已经安装了,这里是开了个虚拟机演示。</p><p>Unofficial Windows Binaries for Python Extension Packages地址(用于下载pymol包)：<br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br>链接挂掉了，但是可以通过github的release进入下载</p><p>Anaconda官网：<br><a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p><p>如果使用pip命令出现无法安装的问题，视情况而解决，不过很有可能只是需要更换为国内镜像就可以了，在这里提供一个临时调用镜像源的命令(这里的some-package指的是包的文件，比如pymol-2.6.0a0-cp38-cp38-win_amd64.whl)：</p><p>pip install some-package -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p><p>win版本的gromacs安装，对于win7用户来说，设置环境变量也是一样，只不过在搜索那里改成“环境变量”——&gt;选择系统环境变量进行修改就行。 需要注意的是，win7的环境变量是没有新建的按钮，如果要添加新的环境变量，需要在原来的环境变量的基础上，写入一个分号进行分隔（比如C:\abc;C:\cde;C:\aaa;C:\bbb），再将地址粘贴上去保存确定�上去保存确定</p>]]></content>
    
    
      
      
    <summary type="html">
&lt;div style=&quot;position: relative;width: 100%;height: 0;padding-bottom: 75%;&quot;&gt;
&lt;iframe src=&quot;//player.bilibili.com/player.html?isOutside=true&amp;a</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>wormlab3.0使用介绍</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250815193333.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250815193333.html</id>
    <published>2025-08-15T11:33:33.000Z</published>
    <updated>2025-08-17T16:09:03.989Z</updated>
    
    <content type="html"><![CDATA[<div style="position: relative;width: 100%;height: 0;padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=114494449648083&bvid=BV1UREEzAEyz&cid=29924330369&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p><a href="https://www.youtube.com/watch?v=OdZGgVD_iv4">https://www.youtube.com/watch?v=OdZGgVD_iv4</a></p><p>视频转载自油管，并使用deepseek自动进行翻译k自动进行翻译</p>]]></content>
    
    
      
      
    <summary type="html">
&lt;div style=&quot;position: relative;width: 100%;height: 0;padding-bottom: 75%;&quot;&gt;
&lt;iframe src=&quot;//player.bilibili.com/player.html?isOutside=true&amp;a</summary>
      
    
    
    
    <category term="湿实验相关" scheme="https://www.jinhenghaoblog.top/categories/%E6%B9%BF%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>基于AutoDock-Vina的小分子并行对接</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250815144507.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250815144507.html</id>
    <published>2025-08-15T06:45:07.000Z</published>
    <updated>2025-08-17T16:09:03.983Z</updated>
    
    <content type="html"><![CDATA[<p>需求：有一个需要用一种受体对八千多个小分子对接的任务，故写下此脚本。</p><p>对接数据如下：</p><p><img src="/images/localImg/225f85c99d5c5b60c2a7eea2b5c6326e.png" alt="225f85c99d5c5b60c2a7eea2b5c6326e.png"></p><p>不同名称的中药</p><p><img src="/images/localImg/3eac42f37e0f2081005e43f1bddcc0b5.png" alt="3eac42f37e0f2081005e43f1bddcc0b5.png"></p><p>其中一种中药含有的各种成分，已经通过 prepare_receptor4.py 批量转换为 pdbqt 文件</p><p>对接脚本如下，放到不同中药文件夹的目录下运行即可（linux）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on *********</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 真弓快车</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">该脚本的目的是检查因为异常而未能对接成功的分子，再批量对接</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">example:</span></span><br><span class="line"><span class="string">vina --ligand ./*/*.pdbqt --out result.pdbqt --config 2oxe.conf &gt; result.log</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> joblib <span class="keyword">import</span> Parallel, delayed</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">docker</span>(<span class="params">ingredient, medname</span>): <span class="comment"># 并行处理函数</span></span><br><span class="line">    os.system(<span class="string">&quot;vina --ligand ./&quot;</span>+medname+<span class="string">&#x27;/&#x27;</span> + ingredient + <span class="string">&quot; --out ./&quot;</span>+medname+<span class="string">&#x27;/&#x27;</span> + <span class="built_in">str</span>(ingredient).replace(<span class="string">&quot;.pdbqt&quot;</span>, <span class="string">&quot;&quot;</span>) + <span class="string">&quot;_out.pdbqt --config 2oxe.conf &gt; ./&quot;</span>+medname+<span class="string">&quot;/&quot;</span>+ingredient.replace(<span class="string">&#x27;.pdbqt&#x27;</span>,<span class="string">&quot;.log&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    medList = os.listdir()</span><br><span class="line">    <span class="keyword">for</span> medname <span class="keyword">in</span> tqdm(medList):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> medname:</span><br><span class="line">            <span class="comment"># print(medname)  # 定位到植物</span></span><br><span class="line">            ingredientList = os.listdir(<span class="string">&#x27;./&#x27;</span>+medname+<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># print(ingredientList)</span></span><br><span class="line">            ingredientList_outPdbqt = []</span><br><span class="line">            <span class="keyword">for</span> iop <span class="keyword">in</span> ingredientList:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;_out&#x27;</span> <span class="keyword">in</span> iop:</span><br><span class="line">                    ingredientList_outPdbqt.append(iop)</span><br><span class="line">        </span><br><span class="line">            <span class="comment"># print(ingredientList_outPdbqt)</span></span><br><span class="line">            ingredientList_outPdbqt_1 = []</span><br><span class="line">            <span class="keyword">for</span> iop1 <span class="keyword">in</span> ingredientList_outPdbqt:</span><br><span class="line">                iop1 = iop1.replace(<span class="string">&#x27;_out&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                ingredientList_outPdbqt_1.append(iop1)</span><br><span class="line">            <span class="comment"># print(ingredientList_outPdbqt_1)</span></span><br><span class="line">        </span><br><span class="line">            ingredientNotOutNotLogList = []</span><br><span class="line">            <span class="keyword">for</span> inonl <span class="keyword">in</span> ingredientList:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;_out&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> inonl:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">&#x27;.log&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> inonl:</span><br><span class="line">                        ingredientNotOutNotLogList.append(inonl)</span><br><span class="line">            <span class="comment"># print(ingredientNotOutNotLogList)</span></span><br><span class="line"></span><br><span class="line">            ingredientNotDock = <span class="built_in">list</span>(<span class="built_in">set</span>(ingredientNotOutNotLogList)-<span class="built_in">set</span>(ingredientList_outPdbqt_1))</span><br><span class="line">            <span class="comment"># print(ingredientNotDock)</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">            <span class="comment"># for ingredient in ingredientNotDock:</span></span><br><span class="line">            <span class="comment">#     # print(ingredient)   # 定位到具体植物具体未对接的成分</span></span><br><span class="line">            <span class="comment">#     print(&quot;vina --ligand ./&quot;+medname+&#x27;/&#x27; + ingredient + &quot; --out ./&quot;+medname+&#x27;/&#x27; + str(ingredient).replace(&quot;.pdbqt&quot;, &quot;&quot;) + &quot;_out.pdbqt --config 2oxe.conf &gt; ./&quot;+medname+&quot;/&quot;+ingredient.replace(&#x27;.pdbqt&#x27;,&quot;.log&quot;))</span></span><br><span class="line">            <span class="comment">#     pass</span></span><br><span class="line"></span><br><span class="line">            Parallel(n_jobs=-<span class="number">1</span>)(delayed(docker)(ingredient, medname) <span class="keyword">for</span> ingredient <span class="keyword">in</span> ingredientNotDock)</span><br><span class="line"></span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>运行完毕后还需要将所有的结果导出，故写了下列数据整理代码。放到不同中药文件夹的上一级目录，名称改成ingredientPdbqt，或者直接修改脚本也可。示例：</p><p><img src="/images/localImg/8674f821964996a3af1d5edfaf0770cb.png" alt="8674f821964996a3af1d5edfaf0770cb.png"></p><p>数据整理脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on *********</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 真弓快车</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">该脚本的目的是将所有的txt文件整理输出为一个csv文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">example:</span></span><br><span class="line"><span class="string">vina --ligand ./*/*.pdbqt --out result.pdbqt --config 2oxe.conf &gt; result.log</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">log2List</span>(<span class="params">medfile, pdbqtFile</span>):</span><br><span class="line">    <span class="comment"># dockResult = []</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./ingredientPdbqt/&quot;</span>+medfile+<span class="string">&#x27;/&#x27;</span>+pdbqtFile, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> logfile:</span><br><span class="line">        <span class="comment"># print(pdbqtFile, logfile.readlines()[38][10:18])  # 对接结果</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            dockResult = logfile.readlines()[<span class="number">38</span>][<span class="number">10</span>:<span class="number">18</span>]</span><br><span class="line">            <span class="built_in">print</span>(pdbqtFile, dockResult)</span><br><span class="line">            <span class="keyword">return</span> dockResult</span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;None&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 文件夹初始化</span></span><br><span class="line">    originFileList = os.listdir()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;csv&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> originFileList:</span><br><span class="line">        os.mkdir(<span class="string">&#x27;csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    medfiles = os.listdir(<span class="string">&quot;./ingredientPdbqt&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> medfile <span class="keyword">in</span> medfiles:</span><br><span class="line">        <span class="comment"># print(medfile)  定位到药食同源文件夹</span></span><br><span class="line">        pdbqtFiles = os.listdir(<span class="string">&quot;./ingredientPdbqt/&quot;</span>+medfile)</span><br><span class="line">        <span class="keyword">for</span> pdbqtFile <span class="keyword">in</span> pdbqtFiles:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;.log&#x27;</span> <span class="keyword">in</span> pdbqtFile:</span><br><span class="line">                dockResult = log2List(medfile, pdbqtFile)</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./csv/&quot;</span>+medfile+<span class="string">&#x27;.csv&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">                    csvfile.write(pdbqtFile+<span class="string">&#x27;,&#x27;</span>+dockResult+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算对接平均值并改名</span></span><br><span class="line">    csvListDir = os.listdir(<span class="string">&quot;./csv&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> csvFile <span class="keyword">in</span> csvListDir:</span><br><span class="line">        csvContent = pd.read_csv(<span class="string">&#x27;./csv/&#x27;</span>+csvFile)</span><br><span class="line">        dockingResultList = csvContent.iloc[:, <span class="number">1</span>]</span><br><span class="line">        dockingMean = np.mean(dockingResultList)</span><br><span class="line">        <span class="built_in">print</span>(csvFile+<span class="string">&#x27;平均对接分数&#x27;</span>+<span class="built_in">str</span>(dockingMean))</span><br><span class="line">        os.rename(<span class="string">&#x27;./csv/&#x27;</span>+csvFile, <span class="string">&#x27;./csv/&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">round</span>(<span class="built_in">float</span>(dockingMean), <span class="number">4</span>))+<span class="string">&#x27;=&#x27;</span>+csvFile)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意运行该脚本前，要保证ingredientPdbqt 文件夹只有文件夹，没有任何文件存在。否则会运行错误。</p><p>已知 Bug：使用该脚本时有时会出现控制台出现”Killed“字样，这是因为内存不足导致系统强制中止其中一个对接的进程。解决办法是将 Parallel(n_jobs&#x3D;-1)里面的”-1”改成低于你 cpu 的核数。要么你运行多几次这个脚本。保证每个对接都能顺利进行。<br>��顺利进行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;需求：有一个需要用一种受体对八千多个小分子对接的任务，故写下此脚本。&lt;/p&gt;
&lt;p&gt;对接数据如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/localImg/225f85c99d5c5b60c2a7eea2b5c6326e.png&quot; alt=&quot;225f85c99d</summary>
      
    
    
    
    <category term="生物信息" scheme="https://www.jinhenghaoblog.top/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
    <category term="分子对接" scheme="https://www.jinhenghaoblog.top/tags/%E5%88%86%E5%AD%90%E5%AF%B9%E6%8E%A5/"/>
    
    <category term="AutoDock-Vina" scheme="https://www.jinhenghaoblog.top/tags/AutoDock-Vina/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的训练集划分脚本</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250815143249.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250815143249.html</id>
    <published>2025-08-15T06:32:49.000Z</published>
    <updated>2025-08-17T16:09:03.982Z</updated>
    
    <content type="html"><![CDATA[<p>需求：需要对数据集进行 0.7 比例的训练集验证集划分，并分配 100 张图片作为测试集</p><p>基于以上需求编写该脚本，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    splitNum = <span class="number">0.7</span>  <span class="comment"># 训练集验证集划分比例</span></span><br><span class="line">    imagePath = <span class="string">&#x27;./wormPic/images/&#x27;</span></span><br><span class="line">    txtPath = <span class="string">&#x27;./wormPic/txt/&#x27;</span></span><br><span class="line"></span><br><span class="line">    imageList = os.listdir(imagePath)</span><br><span class="line">    txtList = os.listdir(txtPath)</span><br><span class="line"></span><br><span class="line">    totalNum = <span class="built_in">len</span>(imageList)</span><br><span class="line">    testNum = <span class="number">100</span>  <span class="comment"># 默认100张图片作为测试集</span></span><br><span class="line">    totalNum = totalNum - <span class="number">100</span></span><br><span class="line">    trainNum = <span class="built_in">int</span>(splitNum * totalNum)</span><br><span class="line">    valNum = totalNum - trainNum</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;训练集划分:&#x27;</span>+<span class="built_in">str</span>(trainNum), </span><br><span class="line">          <span class="string">&#x27;验证集划分:&#x27;</span>+<span class="built_in">str</span>(valNum), </span><br><span class="line">          <span class="string">&#x27;测试集划分:&#x27;</span>+<span class="built_in">str</span>(testNum))</span><br><span class="line">    <span class="comment"># print(txtPath)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 原始文件名字</span></span><br><span class="line">    randomList = []</span><br><span class="line">    <span class="keyword">for</span> jpgname <span class="keyword">in</span> imageList:</span><br><span class="line">        filename = jpgname.replace(<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        randomList.append(filename)</span><br><span class="line"></span><br><span class="line">    np.random.shuffle(randomList)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建文件夹</span></span><br><span class="line">    localtime = time.asctime()</span><br><span class="line">    localtime = localtime.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>).replace(<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 一级目录</span></span><br><span class="line">    os.makedirs(<span class="string">&#x27;./dataSet-&#x27;</span>+localtime, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 二级目录</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>, <span class="string">&#x27;test&#x27;</span>]:</span><br><span class="line">        os.makedirs(<span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/&#x27;</span>+i, exist_ok=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 三级目录</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> [<span class="string">&#x27;images&#x27;</span>, <span class="string">&#x27;labels&#x27;</span>]:</span><br><span class="line">            os.makedirs(<span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/&#x27;</span>+i+<span class="string">&#x27;/&#x27;</span>+j, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># shutil.copy(src_file, target_path)</span></span><br><span class="line">    <span class="comment"># 文件的复制操作</span></span><br><span class="line">    <span class="comment"># images复制</span></span><br><span class="line">    <span class="keyword">for</span> imagefileTrain <span class="keyword">in</span> randomList[<span class="number">0</span>:trainNum]:</span><br><span class="line">        shutil.copy(imagePath+imagefileTrain+<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/train/images/&#x27;</span>+imagefileTrain+<span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> imagefileVal <span class="keyword">in</span> randomList[trainNum: trainNum+valNum]:</span><br><span class="line">        shutil.copy(imagePath+imagefileVal+<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/val/images/&#x27;</span>+imagefileVal+<span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> imagefileTest <span class="keyword">in</span> randomList[trainNum+valNum:]:</span><br><span class="line">        shutil.copy(imagePath+imagefileTest+<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/test/images/&#x27;</span>+imagefileTest+<span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># txt文件复制</span></span><br><span class="line">    <span class="keyword">for</span> txtfileTrain <span class="keyword">in</span> randomList[<span class="number">0</span>:trainNum]:</span><br><span class="line">        shutil.copy(txtPath+txtfileTrain+<span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/train/labels/&#x27;</span>+txtfileTrain+<span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> txtfileVal <span class="keyword">in</span> randomList[trainNum: trainNum+valNum]:</span><br><span class="line">        shutil.copy(txtPath+txtfileVal+<span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/val/labels/&#x27;</span>+txtfileVal+<span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> txtfileTest <span class="keyword">in</span> randomList[trainNum+valNum:]:</span><br><span class="line">        shutil.copy(txtPath+txtfileTest+<span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;./dataSet-&#x27;</span>+localtime+<span class="string">&#x27;/test/labels/&#x27;</span>+txtfileTest+<span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;运行完毕&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行后的脚本会产生一个文件夹，类似于：dataSet-Fri-Ju1-19-15-32-49-2024</p><p>其二级目录含有test，val、train文件夹</p><p>其三级目录含有images，labels文件夹</p><p>内部存有已经分配好的图片与标签。<br>图片与标签。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;需求：需要对数据集进行 0.7 比例的训练集验证集划分，并分配 100 张图片作为测试集&lt;/p&gt;
&lt;p&gt;基于以上需求编写该脚本，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="深度学习" scheme="https://www.jinhenghaoblog.top/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="pytorch" scheme="https://www.jinhenghaoblog.top/tags/pytorch/"/>
    
    <category term="深度学习" scheme="https://www.jinhenghaoblog.top/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>多浓度线虫高糖培养基配方记录</title>
    <link href="https://www.jinhenghaoblog.top/posts/20250813202247.html"/>
    <id>https://www.jinhenghaoblog.top/posts/20250813202247.html</id>
    <published>2025-08-13T12:22:47.000Z</published>
    <updated>2025-08-17T16:09:03.980Z</updated>
    
    <content type="html"><![CDATA[<p>记于2025-6-11</p><p>要求（<strong>100 mg&#x2F;mL</strong>母液浓度，配制400 mL培养基的目标浓度），使用稀释公式 <strong><strong><strong>C</strong></strong>₁V</strong><strong>₁ &#x3D; C<strong><strong>₂V</strong></strong>₂</strong> 计算各浓度所需母液体积（单位：μg&#x2F;mL与mL需统一）</p><p>具体计算如下：</p><h1 id="🔢-关键参数"><a href="#🔢-关键参数" class="headerlink" title="🔢 关键参数"></a><strong>🔢 关键参数</strong></h1><ul><li><strong><strong><strong>母液浓度 (C</strong></strong>₁)</strong>****：100 mg&#x2F;mL &#x3D; <strong><strong><strong>100,000 μg&#x2F;mL</strong></strong></strong>（1 mg &#x3D; 1000 μg）</li><li><strong><strong><strong>目标体积 (V</strong></strong>₂)</strong>****：400 mL</li><li><strong><strong><strong>目标浓度 (C</strong></strong>₂)</strong>****：25、50、100、200、500 μg&#x2F;mL</li><li><strong><strong><strong>需加母液体积 (V</strong></strong>₁)</strong><strong>**：按公式 <strong><strong><strong>V</strong></strong>₁ &#x3D; (C</strong>**₂ <strong><strong>× V</strong></strong>₂) &#x2F; C</strong><strong>₁</strong></li></ul><h1 id="📊-计算结果"><a href="#📊-计算结果" class="headerlink" title="📊 计算结果"></a><strong>📊 计算结果</strong></h1><table><thead><tr><th><strong>目标浓度(μg&#x2F;mL)</strong></th><th><strong>需加母液体积(μL)</strong></th><th><strong>计算公式与过程</strong></th></tr></thead><tbody><tr><td>25</td><td><strong><strong><strong>100 μL</strong></strong></strong></td><td>(25  × 400) ÷ 100,000 &#x3D; 0.1 mL &#x3D; 100 μL</td></tr><tr><td>50</td><td><strong><strong><strong>200 μL</strong></strong></strong></td><td>(50  × 400) ÷ 100,000 &#x3D; 0.2 mL &#x3D; 200 μL</td></tr><tr><td>100</td><td><strong><strong><strong>400 μL</strong></strong></strong></td><td>(100  × 400) ÷ 100,000 &#x3D; 0.4 mL &#x3D; 400 μL</td></tr><tr><td>200</td><td><strong><strong><strong>800 μL</strong></strong></strong></td><td>(200  × 400) ÷ 100,000 &#x3D; 0.8 mL &#x3D; 800 μL</td></tr><tr><td>500</td><td><strong><strong><strong>2000 μL</strong></strong></strong></td><td>(500  × 400) ÷ 100,000 &#x3D; 2 mL &#x3D; 2000 μL</td></tr></tbody></table><h1 id="⚠️-操作注意事项"><a href="#⚠️-操作注意事项" class="headerlink" title="⚠️ 操作注意事项"></a><strong>⚠️ 操作注意事项</strong></h1><ol><li><strong><strong><strong>单位转换</strong></strong></strong>：所有浓度单位需统一为μg&#x2F;mL（母液100 mg&#x2F;mL &#x3D; 100,000 μg&#x2F;mL）</li><li><strong><strong><strong>体积控制</strong></strong></strong>：<ul><li>需将母液加入400 mL培养基中，<strong><strong><strong>最终总体积需严格为400 mL</strong></strong></strong>（若培养基初始体积不足400 mL，需先补足溶剂再添加母液）</li><li>例如：配制500 μg&#x2F;mL时，需取<strong><strong><strong>2000 μL母液</strong></strong></strong>加入<strong><strong><strong>398 mL培养基</strong></strong></strong>（400 mL - 2 mL &#x3D; 398 mL）。</li></ul></li><li><strong><strong><strong>混合均匀</strong></strong></strong>：加入母液后需充分搅拌或震荡培养基，确保浓度均一</li></ol><h1 id="💎-总结步骤"><a href="#💎-总结步骤" class="headerlink" title="💎 总结步骤"></a><strong>💎 总结步骤</strong></h1><ol><li>取400 mL培养基（若为固体需预先溶解）；</li><li>按上表体积加入母液；</li><li>混合均匀后即可使用。<br>后即可使用。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记于2025-6-11&lt;/p&gt;
&lt;p&gt;要求（&lt;strong&gt;100 mg&amp;#x2F;mL&lt;/strong&gt;母液浓度，配制400 mL培养基的目标浓度），使用稀释公式 &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/strong&gt;₁V&lt;/strong&gt;</summary>
      
    
    
    
    <category term="湿实验相关" scheme="https://www.jinhenghaoblog.top/categories/%E6%B9%BF%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="秀丽隐杆线虫" scheme="https://www.jinhenghaoblog.top/tags/%E7%A7%80%E4%B8%BD%E9%9A%90%E6%9D%86%E7%BA%BF%E8%99%AB/"/>
    
  </entry>
  
</feed>
